package org.obicere.bytecode.core.reader.instruction;

import org.obicere.bytecode.core.objects.instruction.Instruction;
import org.obicere.bytecode.core.objects.instruction.UnknownInstruction;
import org.obicere.bytecode.core.util.IndexedDataInputStream;
import org.obicere.bytecode.core.reader.MultiReader;
import org.obicere.bytecode.core.reader.Reader;

import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 * @author Obicere
 */
public class InstructionReader extends MultiReader<Byte, Instruction> {

    public static final byte OPCODE_NOP             = (byte) 0x0;
    public static final byte OPCODE_ACONST_NULL     = (byte) 0x1;
    public static final byte OPCODE_ICONST_M1       = (byte) 0x2;
    public static final byte OPCODE_ICONST_0        = (byte) 0x3;
    public static final byte OPCODE_ICONST_1        = (byte) 0x4;
    public static final byte OPCODE_ICONST_2        = (byte) 0x5;
    public static final byte OPCODE_ICONST_3        = (byte) 0x6;
    public static final byte OPCODE_ICONST_4        = (byte) 0x7;
    public static final byte OPCODE_ICONST_5        = (byte) 0x8;
    public static final byte OPCODE_LCONST_0        = (byte) 0x9;
    public static final byte OPCODE_LCONST_1        = (byte) 0xa;
    public static final byte OPCODE_FCONST_0        = (byte) 0xb;
    public static final byte OPCODE_FCONST_1        = (byte) 0xc;
    public static final byte OPCODE_FCONST_2        = (byte) 0xd;
    public static final byte OPCODE_DCONST_0        = (byte) 0xe;
    public static final byte OPCODE_DCONST_1        = (byte) 0xf;
    public static final byte OPCODE_BIPUSH          = (byte) 0x10;
    public static final byte OPCODE_SIPUSH          = (byte) 0x11;
    public static final byte OPCODE_LDC             = (byte) 0x12;
    public static final byte OPCODE_LDC_W           = (byte) 0x13;
    public static final byte OPCODE_LDC2_W          = (byte) 0x14;
    public static final byte OPCODE_ILOAD           = (byte) 0x15;
    public static final byte OPCODE_LLOAD           = (byte) 0x16;
    public static final byte OPCODE_FLOAD           = (byte) 0x17;
    public static final byte OPCODE_DLOAD           = (byte) 0x18;
    public static final byte OPCODE_ALOAD           = (byte) 0x19;
    public static final byte OPCODE_ILOAD_0         = (byte) 0x1a;
    public static final byte OPCODE_ILOAD_1         = (byte) 0x1b;
    public static final byte OPCODE_ILOAD_2         = (byte) 0x1c;
    public static final byte OPCODE_ILOAD_3         = (byte) 0x1d;
    public static final byte OPCODE_LLOAD_0         = (byte) 0x1e;
    public static final byte OPCODE_LLOAD_1         = (byte) 0x1f;
    public static final byte OPCODE_LLOAD_2         = (byte) 0x20;
    public static final byte OPCODE_LLOAD_3         = (byte) 0x21;
    public static final byte OPCODE_FLOAD_0         = (byte) 0x22;
    public static final byte OPCODE_FLOAD_1         = (byte) 0x23;
    public static final byte OPCODE_FLOAD_2         = (byte) 0x24;
    public static final byte OPCODE_FLOAD_3         = (byte) 0x25;
    public static final byte OPCODE_DLOAD_0         = (byte) 0x26;
    public static final byte OPCODE_DLOAD_1         = (byte) 0x27;
    public static final byte OPCODE_DLOAD_2         = (byte) 0x28;
    public static final byte OPCODE_DLOAD_3         = (byte) 0x29;
    public static final byte OPCODE_ALOAD_0         = (byte) 0x2a;
    public static final byte OPCODE_ALOAD_1         = (byte) 0x2b;
    public static final byte OPCODE_ALOAD_2         = (byte) 0x2c;
    public static final byte OPCODE_ALOAD_3         = (byte) 0x2d;
    public static final byte OPCODE_IALOAD          = (byte) 0x2e;
    public static final byte OPCODE_LALOAD          = (byte) 0x2f;
    public static final byte OPCODE_FALOAD          = (byte) 0x30;
    public static final byte OPCODE_DALOAD          = (byte) 0x31;
    public static final byte OPCODE_AALOAD          = (byte) 0x32;
    public static final byte OPCODE_BALOAD          = (byte) 0x33;
    public static final byte OPCODE_CALOAD          = (byte) 0x34;
    public static final byte OPCODE_SALOAD          = (byte) 0x35;
    public static final byte OPCODE_ISTORE          = (byte) 0x36;
    public static final byte OPCODE_LSTORE          = (byte) 0x37;
    public static final byte OPCODE_FSTORE          = (byte) 0x38;
    public static final byte OPCODE_DSTORE          = (byte) 0x39;
    public static final byte OPCODE_ASTORE          = (byte) 0x3a;
    public static final byte OPCODE_ISTORE_0        = (byte) 0x3b;
    public static final byte OPCODE_ISTORE_1        = (byte) 0x3c;
    public static final byte OPCODE_ISTORE_2        = (byte) 0x3d;
    public static final byte OPCODE_ISTORE_3        = (byte) 0x3e;
    public static final byte OPCODE_LSTORE_0        = (byte) 0x3f;
    public static final byte OPCODE_LSTORE_1        = (byte) 0x40;
    public static final byte OPCODE_LSTORE_2        = (byte) 0x41;
    public static final byte OPCODE_LSTORE_3        = (byte) 0x42;
    public static final byte OPCODE_FSTORE_0        = (byte) 0x43;
    public static final byte OPCODE_FSTORE_1        = (byte) 0x44;
    public static final byte OPCODE_FSTORE_2        = (byte) 0x45;
    public static final byte OPCODE_FSTORE_3        = (byte) 0x46;
    public static final byte OPCODE_DSTORE_0        = (byte) 0x47;
    public static final byte OPCODE_DSTORE_1        = (byte) 0x48;
    public static final byte OPCODE_DSTORE_2        = (byte) 0x49;
    public static final byte OPCODE_DSTORE_3        = (byte) 0x4a;
    public static final byte OPCODE_ASTORE_0        = (byte) 0x4b;
    public static final byte OPCODE_ASTORE_1        = (byte) 0x4c;
    public static final byte OPCODE_ASTORE_2        = (byte) 0x4d;
    public static final byte OPCODE_ASTORE_3        = (byte) 0x4e;
    public static final byte OPCODE_IASTORE         = (byte) 0x4f;
    public static final byte OPCODE_LASTORE         = (byte) 0x50;
    public static final byte OPCODE_FASTORE         = (byte) 0x51;
    public static final byte OPCODE_DASTORE         = (byte) 0x52;
    public static final byte OPCODE_AASTORE         = (byte) 0x53;
    public static final byte OPCODE_BASTORE         = (byte) 0x54;
    public static final byte OPCODE_CASTORE         = (byte) 0x55;
    public static final byte OPCODE_SASTORE         = (byte) 0x56;
    public static final byte OPCODE_POP             = (byte) 0x57;
    public static final byte OPCODE_POP2            = (byte) 0x58;
    public static final byte OPCODE_DUP             = (byte) 0x59;
    public static final byte OPCODE_DUP_X1          = (byte) 0x5a;
    public static final byte OPCODE_DUP_X2          = (byte) 0x5b;
    public static final byte OPCODE_DUP2            = (byte) 0x5c;
    public static final byte OPCODE_DUP2_X1         = (byte) 0x5d;
    public static final byte OPCODE_DUP2_X2         = (byte) 0x5e;
    public static final byte OPCODE_SWAP            = (byte) 0x5f;
    public static final byte OPCODE_IADD            = (byte) 0x60;
    public static final byte OPCODE_LADD            = (byte) 0x61;
    public static final byte OPCODE_FADD            = (byte) 0x62;
    public static final byte OPCODE_DADD            = (byte) 0x63;
    public static final byte OPCODE_ISUB            = (byte) 0x64;
    public static final byte OPCODE_LSUB            = (byte) 0x65;
    public static final byte OPCODE_FSUB            = (byte) 0x66;
    public static final byte OPCODE_DSUB            = (byte) 0x67;
    public static final byte OPCODE_IMUL            = (byte) 0x68;
    public static final byte OPCODE_LMUL            = (byte) 0x69;
    public static final byte OPCODE_FMUL            = (byte) 0x6a;
    public static final byte OPCODE_DMUL            = (byte) 0x6b;
    public static final byte OPCODE_IDIV            = (byte) 0x6c;
    public static final byte OPCODE_LDIV            = (byte) 0x6d;
    public static final byte OPCODE_FDIV            = (byte) 0x6e;
    public static final byte OPCODE_DDIV            = (byte) 0x6f;
    public static final byte OPCODE_IREM            = (byte) 0x70;
    public static final byte OPCODE_LREM            = (byte) 0x71;
    public static final byte OPCODE_FREM            = (byte) 0x72;
    public static final byte OPCODE_DREM            = (byte) 0x73;
    public static final byte OPCODE_INEG            = (byte) 0x74;
    public static final byte OPCODE_LNEG            = (byte) 0x75;
    public static final byte OPCODE_FNEG            = (byte) 0x76;
    public static final byte OPCODE_DNEG            = (byte) 0x77;
    public static final byte OPCODE_ISHL            = (byte) 0x78;
    public static final byte OPCODE_LSHL            = (byte) 0x79;
    public static final byte OPCODE_ISHR            = (byte) 0x7a;
    public static final byte OPCODE_LSHR            = (byte) 0x7b;
    public static final byte OPCODE_IUSHR           = (byte) 0x7c;
    public static final byte OPCODE_LUSHR           = (byte) 0x7d;
    public static final byte OPCODE_IAND            = (byte) 0x7e;
    public static final byte OPCODE_LAND            = (byte) 0x7f;
    public static final byte OPCODE_IOR             = (byte) 0x80;
    public static final byte OPCODE_LOR             = (byte) 0x81;
    public static final byte OPCODE_IXOR            = (byte) 0x82;
    public static final byte OPCODE_LXOR            = (byte) 0x83;
    public static final byte OPCODE_IINC            = (byte) 0x84;
    public static final byte OPCODE_I2L             = (byte) 0x85;
    public static final byte OPCODE_I2F             = (byte) 0x86;
    public static final byte OPCODE_I2D             = (byte) 0x87;
    public static final byte OPCODE_L2I             = (byte) 0x88;
    public static final byte OPCODE_L2F             = (byte) 0x89;
    public static final byte OPCODE_L2D             = (byte) 0x8a;
    public static final byte OPCODE_F2I             = (byte) 0x8b;
    public static final byte OPCODE_F2L             = (byte) 0x8c;
    public static final byte OPCODE_F2D             = (byte) 0x8d;
    public static final byte OPCODE_D2I             = (byte) 0x8e;
    public static final byte OPCODE_D2L             = (byte) 0x8f;
    public static final byte OPCODE_D2F             = (byte) 0x90;
    public static final byte OPCODE_I2B             = (byte) 0x91;
    public static final byte OPCODE_I2C             = (byte) 0x92;
    public static final byte OPCODE_I2S             = (byte) 0x93;
    public static final byte OPCODE_LCMP            = (byte) 0x94;
    public static final byte OPCODE_FCMPL           = (byte) 0x95;
    public static final byte OPCODE_FCMPG           = (byte) 0x96;
    public static final byte OPCODE_DCMPL           = (byte) 0x97;
    public static final byte OPCODE_DCMPG           = (byte) 0x98;
    public static final byte OPCODE_IFEQ            = (byte) 0x99;
    public static final byte OPCODE_IFNE            = (byte) 0x9a;
    public static final byte OPCODE_IFLT            = (byte) 0x9b;
    public static final byte OPCODE_IFGE            = (byte) 0x9c;
    public static final byte OPCODE_IFGT            = (byte) 0x9d;
    public static final byte OPCODE_IFLE            = (byte) 0x9e;
    public static final byte OPCODE_IF_ICMPEQ       = (byte) 0x9f;
    public static final byte OPCODE_IF_ICMPNE       = (byte) 0xa0;
    public static final byte OPCODE_IF_ICMPLT       = (byte) 0xa1;
    public static final byte OPCODE_IF_ICMPGE       = (byte) 0xa2;
    public static final byte OPCODE_IF_ICMPGT       = (byte) 0xa3;
    public static final byte OPCODE_IF_ICMPLE       = (byte) 0xa4;
    public static final byte OPCODE_IF_ACMPEQ       = (byte) 0xa5;
    public static final byte OPCODE_IF_ACMPNE       = (byte) 0xa6;
    public static final byte OPCODE_GOTO            = (byte) 0xa7;
    public static final byte OPCODE_JSR             = (byte) 0xa8;
    public static final byte OPCODE_RET             = (byte) 0xa9;
    public static final byte OPCODE_TABLESWITCH     = (byte) 0xaa;
    public static final byte OPCODE_LOOKUPSWITCH    = (byte) 0xab;
    public static final byte OPCODE_IRETURN         = (byte) 0xac;
    public static final byte OPCODE_LRETURN         = (byte) 0xad;
    public static final byte OPCODE_FRETURN         = (byte) 0xae;
    public static final byte OPCODE_DRETURN         = (byte) 0xaf;
    public static final byte OPCODE_ARETURN         = (byte) 0xb0;
    public static final byte OPCODE_RETURN          = (byte) 0xb1;
    public static final byte OPCODE_GETSTATIC       = (byte) 0xb2;
    public static final byte OPCODE_PUTSTATIC       = (byte) 0xb3;
    public static final byte OPCODE_GETFIELD        = (byte) 0xb4;
    public static final byte OPCODE_PUTFIELD        = (byte) 0xb5;
    public static final byte OPCODE_INVOKEVIRTUAL   = (byte) 0xb6;
    public static final byte OPCODE_INVOKESPECIAL   = (byte) 0xb7;
    public static final byte OPCODE_INVOKESTATIC    = (byte) 0xb8;
    public static final byte OPCODE_INVOKEINTERFACE = (byte) 0xb9;
    public static final byte OPCODE_INVOKEDYNAMIC   = (byte) 0xba;
    public static final byte OPCODE_NEW             = (byte) 0xbb;
    public static final byte OPCODE_NEWARRAY        = (byte) 0xbc;
    public static final byte OPCODE_ANEWARRAY       = (byte) 0xbd;
    public static final byte OPCODE_ARRAYLENGTH     = (byte) 0xbe;
    public static final byte OPCODE_ATHROW          = (byte) 0xbf;
    public static final byte OPCODE_CHECKCAST       = (byte) 0xc0;
    public static final byte OPCODE_INSTANCEOF      = (byte) 0xc1;
    public static final byte OPCODE_MONITORENTER    = (byte) 0xc2;
    public static final byte OPCODE_MONITOREXIT     = (byte) 0xc3;
    public static final byte OPCODE_WIDE            = (byte) 0xc4;
    public static final byte OPCODE_MULTIANEWARRAY  = (byte) 0xc5;
    public static final byte OPCODE_IFNULL          = (byte) 0xc6;
    public static final byte OPCODE_IFNONNULL       = (byte) 0xc7;
    public static final byte OPCODE_GOTO_W          = (byte) 0xc8;
    public static final byte OPCODE_JSR_W           = (byte) 0xc9;
    // might be implemented if needed
    //public static final byte OPCODE_BREAKPOINT      = (byte) 0xca;
    //public static final byte OPCODE_IMPDEP1         = (byte) 0xfe;
    //public static final byte OPCODE_IMPDEP2         = (byte) 0xff;

    public InstructionReader() {
        add(OPCODE_NOP, new nopReader());
        add(OPCODE_ACONST_NULL, new aconst_nullReader());
        add(OPCODE_ICONST_M1, new iconst_m1Reader());
        add(OPCODE_ICONST_0, new iconst_0Reader());
        add(OPCODE_ICONST_1, new iconst_1Reader());
        add(OPCODE_ICONST_2, new iconst_2Reader());
        add(OPCODE_ICONST_3, new iconst_3Reader());
        add(OPCODE_ICONST_4, new iconst_4Reader());
        add(OPCODE_ICONST_5, new iconst_5Reader());
        add(OPCODE_LCONST_0, new lconst_0Reader());
        add(OPCODE_LCONST_1, new lconst_1Reader());
        add(OPCODE_FCONST_0, new fconst_0Reader());
        add(OPCODE_FCONST_1, new fconst_1Reader());
        add(OPCODE_FCONST_2, new fconst_2Reader());
        add(OPCODE_DCONST_0, new dconst_0Reader());
        add(OPCODE_DCONST_1, new dconst_1Reader());
        add(OPCODE_BIPUSH, new bipushReader());
        add(OPCODE_SIPUSH, new sipushReader());
        add(OPCODE_LDC, new ldcReader());
        add(OPCODE_LDC_W, new ldc_wReader());
        add(OPCODE_LDC2_W, new ldc2_wReader());
        add(OPCODE_ILOAD, new iloadReader());
        add(OPCODE_LLOAD, new lloadReader());
        add(OPCODE_FLOAD, new floadReader());
        add(OPCODE_DLOAD, new dloadReader());
        add(OPCODE_ALOAD, new aloadReader());
        add(OPCODE_ILOAD_0, new iload_0Reader());
        add(OPCODE_ILOAD_1, new iload_1Reader());
        add(OPCODE_ILOAD_2, new iload_2Reader());
        add(OPCODE_ILOAD_3, new iload_3Reader());
        add(OPCODE_LLOAD_0, new lload_0Reader());
        add(OPCODE_LLOAD_1, new lload_1Reader());
        add(OPCODE_LLOAD_2, new lload_2Reader());
        add(OPCODE_LLOAD_3, new lload_3Reader());
        add(OPCODE_FLOAD_0, new fload_0Reader());
        add(OPCODE_FLOAD_1, new fload_1Reader());
        add(OPCODE_FLOAD_2, new fload_2Reader());
        add(OPCODE_FLOAD_3, new fload_3Reader());
        add(OPCODE_DLOAD_0, new dload_0Reader());
        add(OPCODE_DLOAD_1, new dload_1Reader());
        add(OPCODE_DLOAD_2, new dload_2Reader());
        add(OPCODE_DLOAD_3, new dload_3Reader());
        add(OPCODE_ALOAD_0, new aload_0Reader());
        add(OPCODE_ALOAD_1, new aload_1Reader());
        add(OPCODE_ALOAD_2, new aload_2Reader());
        add(OPCODE_ALOAD_3, new aload_3Reader());
        add(OPCODE_IALOAD, new ialoadReader());
        add(OPCODE_LALOAD, new laloadReader());
        add(OPCODE_FALOAD, new faloadReader());
        add(OPCODE_DALOAD, new daloadReader());
        add(OPCODE_AALOAD, new aaloadReader());
        add(OPCODE_BALOAD, new baloadReader());
        add(OPCODE_CALOAD, new caloadReader());
        add(OPCODE_SALOAD, new saloadReader());
        add(OPCODE_ISTORE, new istoreReader());
        add(OPCODE_LSTORE, new lstoreReader());
        add(OPCODE_FSTORE, new fstoreReader());
        add(OPCODE_DSTORE, new dstoreReader());
        add(OPCODE_ASTORE, new astoreReader());
        add(OPCODE_ISTORE_0, new istore_0Reader());
        add(OPCODE_ISTORE_1, new istore_1Reader());
        add(OPCODE_ISTORE_2, new istore_2Reader());
        add(OPCODE_ISTORE_3, new istore_3Reader());
        add(OPCODE_LSTORE_0, new lstore_0Reader());
        add(OPCODE_LSTORE_1, new lstore_1Reader());
        add(OPCODE_LSTORE_2, new lstore_2Reader());
        add(OPCODE_LSTORE_3, new lstore_3Reader());
        add(OPCODE_FSTORE_0, new fstore_0Reader());
        add(OPCODE_FSTORE_1, new fstore_1Reader());
        add(OPCODE_FSTORE_2, new fstore_2Reader());
        add(OPCODE_FSTORE_3, new fstore_3Reader());
        add(OPCODE_DSTORE_0, new dstore_0Reader());
        add(OPCODE_DSTORE_1, new dstore_1Reader());
        add(OPCODE_DSTORE_2, new dstore_2Reader());
        add(OPCODE_DSTORE_3, new dstore_3Reader());
        add(OPCODE_ASTORE_0, new astore_0Reader());
        add(OPCODE_ASTORE_1, new astore_1Reader());
        add(OPCODE_ASTORE_2, new astore_2Reader());
        add(OPCODE_ASTORE_3, new astore_3Reader());
        add(OPCODE_IASTORE, new iastoreReader());
        add(OPCODE_LASTORE, new lastoreReader());
        add(OPCODE_FASTORE, new fastoreReader());
        add(OPCODE_DASTORE, new dastoreReader());
        add(OPCODE_AASTORE, new aastoreReader());
        add(OPCODE_BASTORE, new bastoreReader());
        add(OPCODE_CASTORE, new castoreReader());
        add(OPCODE_SASTORE, new sastoreReader());
        add(OPCODE_POP, new popReader());
        add(OPCODE_POP2, new pop2Reader());
        add(OPCODE_DUP, new dupReader());
        add(OPCODE_DUP_X1, new dup_x1Reader());
        add(OPCODE_DUP_X2, new dup_x2Reader());
        add(OPCODE_DUP2, new dup2Reader());
        add(OPCODE_DUP2_X1, new dup2_x1Reader());
        add(OPCODE_DUP2_X2, new dup2_x2Reader());
        add(OPCODE_SWAP, new swapReader());
        add(OPCODE_IADD, new iaddReader());
        add(OPCODE_LADD, new laddReader());
        add(OPCODE_FADD, new faddReader());
        add(OPCODE_DADD, new daddReader());
        add(OPCODE_ISUB, new isubReader());
        add(OPCODE_LSUB, new lsubReader());
        add(OPCODE_FSUB, new fsubReader());
        add(OPCODE_DSUB, new dsubReader());
        add(OPCODE_IMUL, new imulReader());
        add(OPCODE_LMUL, new lmulReader());
        add(OPCODE_FMUL, new fmulReader());
        add(OPCODE_DMUL, new dmulReader());
        add(OPCODE_IDIV, new idivReader());
        add(OPCODE_LDIV, new ldivReader());
        add(OPCODE_FDIV, new fdivReader());
        add(OPCODE_DDIV, new ddivReader());
        add(OPCODE_IREM, new iremReader());
        add(OPCODE_LREM, new lremReader());
        add(OPCODE_FREM, new fremReader());
        add(OPCODE_DREM, new dremReader());
        add(OPCODE_INEG, new inegReader());
        add(OPCODE_LNEG, new lnegReader());
        add(OPCODE_FNEG, new fnegReader());
        add(OPCODE_DNEG, new dnegReader());
        add(OPCODE_ISHL, new ishlReader());
        add(OPCODE_LSHL, new lshlReader());
        add(OPCODE_ISHR, new ishrReader());
        add(OPCODE_LSHR, new lshrReader());
        add(OPCODE_IUSHR, new iushrReader());
        add(OPCODE_LUSHR, new lushrReader());
        add(OPCODE_IAND, new iandReader());
        add(OPCODE_LAND, new landReader());
        add(OPCODE_IOR, new iorReader());
        add(OPCODE_LOR, new lorReader());
        add(OPCODE_IXOR, new ixorReader());
        add(OPCODE_LXOR, new lxorReader());
        add(OPCODE_IINC, new iincReader());
        add(OPCODE_I2L, new i2lReader());
        add(OPCODE_I2F, new i2fReader());
        add(OPCODE_I2D, new i2dReader());
        add(OPCODE_L2I, new l2iReader());
        add(OPCODE_L2F, new l2fReader());
        add(OPCODE_L2D, new l2dReader());
        add(OPCODE_F2I, new f2iReader());
        add(OPCODE_F2L, new f2lReader());
        add(OPCODE_F2D, new f2dReader());
        add(OPCODE_D2I, new d2iReader());
        add(OPCODE_D2L, new d2lReader());
        add(OPCODE_D2F, new d2fReader());
        add(OPCODE_I2B, new i2bReader());
        add(OPCODE_I2C, new i2cReader());
        add(OPCODE_I2S, new i2sReader());
        add(OPCODE_LCMP, new lcmpReader());
        add(OPCODE_FCMPL, new fcmplReader());
        add(OPCODE_FCMPG, new fcmpgReader());
        add(OPCODE_DCMPL, new dcmplReader());
        add(OPCODE_DCMPG, new dcmpgReader());
        add(OPCODE_IFEQ, new ifeqReader());
        add(OPCODE_IFNE, new ifneReader());
        add(OPCODE_IFLT, new ifltReader());
        add(OPCODE_IFGE, new ifgeReader());
        add(OPCODE_IFGT, new ifgtReader());
        add(OPCODE_IFLE, new ifleReader());
        add(OPCODE_IF_ICMPEQ, new if_icmpeqReader());
        add(OPCODE_IF_ICMPNE, new if_icmpneReader());
        add(OPCODE_IF_ICMPLT, new if_icmpltReader());
        add(OPCODE_IF_ICMPGE, new if_icmpgeReader());
        add(OPCODE_IF_ICMPGT, new if_icmpgtReader());
        add(OPCODE_IF_ICMPLE, new if_icmpleReader());
        add(OPCODE_IF_ACMPEQ, new if_acmpeqReader());
        add(OPCODE_IF_ACMPNE, new if_acmpneReader());
        add(OPCODE_GOTO, new gotoReader());
        add(OPCODE_JSR, new jsrReader());
        add(OPCODE_RET, new retReader());
        add(OPCODE_TABLESWITCH, new tableswitchReader());
        add(OPCODE_LOOKUPSWITCH, new lookupswitchReader());
        add(OPCODE_IRETURN, new ireturnReader());
        add(OPCODE_LRETURN, new lreturnReader());
        add(OPCODE_FRETURN, new freturnReader());
        add(OPCODE_DRETURN, new dreturnReader());
        add(OPCODE_ARETURN, new areturnReader());
        add(OPCODE_RETURN, new returnReader());
        add(OPCODE_GETSTATIC, new getstaticReader());
        add(OPCODE_PUTSTATIC, new putstaticReader());
        add(OPCODE_GETFIELD, new getfieldReader());
        add(OPCODE_PUTFIELD, new putfieldReader());
        add(OPCODE_INVOKEVIRTUAL, new invokevirtualReader());
        add(OPCODE_INVOKESPECIAL, new invokespecialReader());
        add(OPCODE_INVOKESTATIC, new invokestaticReader());
        add(OPCODE_INVOKEINTERFACE, new invokeinterfaceReader());
        add(OPCODE_INVOKEDYNAMIC, new invokedynamicReader());
        add(OPCODE_NEW, new newReader());
        add(OPCODE_NEWARRAY, new newarrayReader());
        add(OPCODE_ANEWARRAY, new anewarrayReader());
        add(OPCODE_ARRAYLENGTH, new arraylengthReader());
        add(OPCODE_ATHROW, new athrowReader());
        add(OPCODE_CHECKCAST, new checkcastReader());
        add(OPCODE_INSTANCEOF, new instanceofReader());
        add(OPCODE_MONITORENTER, new monitorenterReader());
        add(OPCODE_MONITOREXIT, new monitorexitReader());
        add(OPCODE_WIDE, new wideReader());
        add(OPCODE_MULTIANEWARRAY, new multianewarrayReader());
        add(OPCODE_IFNULL, new ifnullReader());
        add(OPCODE_IFNONNULL, new ifnonnullReader());
        add(OPCODE_GOTO_W, new goto_wReader());
        add(OPCODE_JSR_W, new jsr_wReader());
        //add(OPCODE_BREAKPOINT, new breakpointReader());
        //add(OPCODE_IMPDEP1, new impdep1Reader());
        //add(OPCODE_IMPDEP2, new impdep2Reader());
    }

    @Override
    public Instruction read(final IndexedDataInputStream input) throws IOException {
        final int start = input.getLogicalIndex();
        final byte next = input.readByte();
        final Reader<? extends Instruction> reader = get(next);
        // if there is no reader associated to this opcode we have an unknown op
        final Instruction instruction;
        if (reader == null) {
            // be sure to unsign the byte with 0xFF
            Logger.getGlobal().log(Level.WARNING, "Found an unknown instruction with operand code: " + (0xFF & next) + " at " + start);
            instruction = new UnknownInstruction(next);
        } else {
            instruction = reader.read(input);
        }

        // make sure to set start and end indices
        final int end = input.getLogicalIndex();
        instruction.setBounds(start, end);
        return instruction;
    }
}

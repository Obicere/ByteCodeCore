package org.obicere.bytecode.core.reader.code.instruction;

import org.javacore.code.instruction.Instruction;
import org.obicere.bytecode.core.reader.MultiReader;
import org.obicere.bytecode.core.reader.Reader;
import org.obicere.bytecode.core.util.ByteCodeReader;

import java.io.IOException;

/**
 * @author Obicere
 */
public class InstructionReader extends MultiReader<Byte, Instruction> {

    public static final byte OPCODE_NOP             = (byte) 0x0;
    public static final byte OPCODE_ACONST_NULL     = (byte) 0x1;
    public static final byte OPCODE_ICONST_M1       = (byte) 0x2;
    public static final byte OPCODE_ICONST_0        = (byte) 0x3;
    public static final byte OPCODE_ICONST_1        = (byte) 0x4;
    public static final byte OPCODE_ICONST_2        = (byte) 0x5;
    public static final byte OPCODE_ICONST_3        = (byte) 0x6;
    public static final byte OPCODE_ICONST_4        = (byte) 0x7;
    public static final byte OPCODE_ICONST_5        = (byte) 0x8;
    public static final byte OPCODE_LCONST_0        = (byte) 0x9;
    public static final byte OPCODE_LCONST_1        = (byte) 0xa;
    public static final byte OPCODE_FCONST_0        = (byte) 0xb;
    public static final byte OPCODE_FCONST_1        = (byte) 0xc;
    public static final byte OPCODE_FCONST_2        = (byte) 0xd;
    public static final byte OPCODE_DCONST_0        = (byte) 0xe;
    public static final byte OPCODE_DCONST_1        = (byte) 0xf;
    public static final byte OPCODE_BIPUSH          = (byte) 0x10;
    public static final byte OPCODE_SIPUSH          = (byte) 0x11;
    public static final byte OPCODE_LDC             = (byte) 0x12;
    public static final byte OPCODE_LDC_W           = (byte) 0x13;
    public static final byte OPCODE_LDC2_W          = (byte) 0x14;
    public static final byte OPCODE_ILOAD           = (byte) 0x15;
    public static final byte OPCODE_LLOAD           = (byte) 0x16;
    public static final byte OPCODE_FLOAD           = (byte) 0x17;
    public static final byte OPCODE_DLOAD           = (byte) 0x18;
    public static final byte OPCODE_ALOAD           = (byte) 0x19;
    public static final byte OPCODE_ILOAD_0         = (byte) 0x1a;
    public static final byte OPCODE_ILOAD_1         = (byte) 0x1b;
    public static final byte OPCODE_ILOAD_2         = (byte) 0x1c;
    public static final byte OPCODE_ILOAD_3         = (byte) 0x1d;
    public static final byte OPCODE_LLOAD_0         = (byte) 0x1e;
    public static final byte OPCODE_LLOAD_1         = (byte) 0x1f;
    public static final byte OPCODE_LLOAD_2         = (byte) 0x20;
    public static final byte OPCODE_LLOAD_3         = (byte) 0x21;
    public static final byte OPCODE_FLOAD_0         = (byte) 0x22;
    public static final byte OPCODE_FLOAD_1         = (byte) 0x23;
    public static final byte OPCODE_FLOAD_2         = (byte) 0x24;
    public static final byte OPCODE_FLOAD_3         = (byte) 0x25;
    public static final byte OPCODE_DLOAD_0         = (byte) 0x26;
    public static final byte OPCODE_DLOAD_1         = (byte) 0x27;
    public static final byte OPCODE_DLOAD_2         = (byte) 0x28;
    public static final byte OPCODE_DLOAD_3         = (byte) 0x29;
    public static final byte OPCODE_ALOAD_0         = (byte) 0x2a;
    public static final byte OPCODE_ALOAD_1         = (byte) 0x2b;
    public static final byte OPCODE_ALOAD_2         = (byte) 0x2c;
    public static final byte OPCODE_ALOAD_3         = (byte) 0x2d;
    public static final byte OPCODE_IALOAD          = (byte) 0x2e;
    public static final byte OPCODE_LALOAD          = (byte) 0x2f;
    public static final byte OPCODE_FALOAD          = (byte) 0x30;
    public static final byte OPCODE_DALOAD          = (byte) 0x31;
    public static final byte OPCODE_AALOAD          = (byte) 0x32;
    public static final byte OPCODE_BALOAD          = (byte) 0x33;
    public static final byte OPCODE_CALOAD          = (byte) 0x34;
    public static final byte OPCODE_SALOAD          = (byte) 0x35;
    public static final byte OPCODE_ISTORE          = (byte) 0x36;
    public static final byte OPCODE_LSTORE          = (byte) 0x37;
    public static final byte OPCODE_FSTORE          = (byte) 0x38;
    public static final byte OPCODE_DSTORE          = (byte) 0x39;
    public static final byte OPCODE_ASTORE          = (byte) 0x3a;
    public static final byte OPCODE_ISTORE_0        = (byte) 0x3b;
    public static final byte OPCODE_ISTORE_1        = (byte) 0x3c;
    public static final byte OPCODE_ISTORE_2        = (byte) 0x3d;
    public static final byte OPCODE_ISTORE_3        = (byte) 0x3e;
    public static final byte OPCODE_LSTORE_0        = (byte) 0x3f;
    public static final byte OPCODE_LSTORE_1        = (byte) 0x40;
    public static final byte OPCODE_LSTORE_2        = (byte) 0x41;
    public static final byte OPCODE_LSTORE_3        = (byte) 0x42;
    public static final byte OPCODE_FSTORE_0        = (byte) 0x43;
    public static final byte OPCODE_FSTORE_1        = (byte) 0x44;
    public static final byte OPCODE_FSTORE_2        = (byte) 0x45;
    public static final byte OPCODE_FSTORE_3        = (byte) 0x46;
    public static final byte OPCODE_DSTORE_0        = (byte) 0x47;
    public static final byte OPCODE_DSTORE_1        = (byte) 0x48;
    public static final byte OPCODE_DSTORE_2        = (byte) 0x49;
    public static final byte OPCODE_DSTORE_3        = (byte) 0x4a;
    public static final byte OPCODE_ASTORE_0        = (byte) 0x4b;
    public static final byte OPCODE_ASTORE_1        = (byte) 0x4c;
    public static final byte OPCODE_ASTORE_2        = (byte) 0x4d;
    public static final byte OPCODE_ASTORE_3        = (byte) 0x4e;
    public static final byte OPCODE_IASTORE         = (byte) 0x4f;
    public static final byte OPCODE_LASTORE         = (byte) 0x50;
    public static final byte OPCODE_FASTORE         = (byte) 0x51;
    public static final byte OPCODE_DASTORE         = (byte) 0x52;
    public static final byte OPCODE_AASTORE         = (byte) 0x53;
    public static final byte OPCODE_BASTORE         = (byte) 0x54;
    public static final byte OPCODE_CASTORE         = (byte) 0x55;
    public static final byte OPCODE_SASTORE         = (byte) 0x56;
    public static final byte OPCODE_POP             = (byte) 0x57;
    public static final byte OPCODE_POP2            = (byte) 0x58;
    public static final byte OPCODE_DUP             = (byte) 0x59;
    public static final byte OPCODE_DUP_X1          = (byte) 0x5a;
    public static final byte OPCODE_DUP_X2          = (byte) 0x5b;
    public static final byte OPCODE_DUP2            = (byte) 0x5c;
    public static final byte OPCODE_DUP2_X1         = (byte) 0x5d;
    public static final byte OPCODE_DUP2_X2         = (byte) 0x5e;
    public static final byte OPCODE_SWAP            = (byte) 0x5f;
    public static final byte OPCODE_IADD            = (byte) 0x60;
    public static final byte OPCODE_LADD            = (byte) 0x61;
    public static final byte OPCODE_FADD            = (byte) 0x62;
    public static final byte OPCODE_DADD            = (byte) 0x63;
    public static final byte OPCODE_ISUB            = (byte) 0x64;
    public static final byte OPCODE_LSUB            = (byte) 0x65;
    public static final byte OPCODE_FSUB            = (byte) 0x66;
    public static final byte OPCODE_DSUB            = (byte) 0x67;
    public static final byte OPCODE_IMUL            = (byte) 0x68;
    public static final byte OPCODE_LMUL            = (byte) 0x69;
    public static final byte OPCODE_FMUL            = (byte) 0x6a;
    public static final byte OPCODE_DMUL            = (byte) 0x6b;
    public static final byte OPCODE_IDIV            = (byte) 0x6c;
    public static final byte OPCODE_LDIV            = (byte) 0x6d;
    public static final byte OPCODE_FDIV            = (byte) 0x6e;
    public static final byte OPCODE_DDIV            = (byte) 0x6f;
    public static final byte OPCODE_IREM            = (byte) 0x70;
    public static final byte OPCODE_LREM            = (byte) 0x71;
    public static final byte OPCODE_FREM            = (byte) 0x72;
    public static final byte OPCODE_DREM            = (byte) 0x73;
    public static final byte OPCODE_INEG            = (byte) 0x74;
    public static final byte OPCODE_LNEG            = (byte) 0x75;
    public static final byte OPCODE_FNEG            = (byte) 0x76;
    public static final byte OPCODE_DNEG            = (byte) 0x77;
    public static final byte OPCODE_ISHL            = (byte) 0x78;
    public static final byte OPCODE_LSHL            = (byte) 0x79;
    public static final byte OPCODE_ISHR            = (byte) 0x7a;
    public static final byte OPCODE_LSHR            = (byte) 0x7b;
    public static final byte OPCODE_IUSHR           = (byte) 0x7c;
    public static final byte OPCODE_LUSHR           = (byte) 0x7d;
    public static final byte OPCODE_IAND            = (byte) 0x7e;
    public static final byte OPCODE_LAND            = (byte) 0x7f;
    public static final byte OPCODE_IOR             = (byte) 0x80;
    public static final byte OPCODE_LOR             = (byte) 0x81;
    public static final byte OPCODE_IXOR            = (byte) 0x82;
    public static final byte OPCODE_LXOR            = (byte) 0x83;
    public static final byte OPCODE_IINC            = (byte) 0x84;
    public static final byte OPCODE_I2L             = (byte) 0x85;
    public static final byte OPCODE_I2F             = (byte) 0x86;
    public static final byte OPCODE_I2D             = (byte) 0x87;
    public static final byte OPCODE_L2I             = (byte) 0x88;
    public static final byte OPCODE_L2F             = (byte) 0x89;
    public static final byte OPCODE_L2D             = (byte) 0x8a;
    public static final byte OPCODE_F2I             = (byte) 0x8b;
    public static final byte OPCODE_F2L             = (byte) 0x8c;
    public static final byte OPCODE_F2D             = (byte) 0x8d;
    public static final byte OPCODE_D2I             = (byte) 0x8e;
    public static final byte OPCODE_D2L             = (byte) 0x8f;
    public static final byte OPCODE_D2F             = (byte) 0x90;
    public static final byte OPCODE_I2B             = (byte) 0x91;
    public static final byte OPCODE_I2C             = (byte) 0x92;
    public static final byte OPCODE_I2S             = (byte) 0x93;
    public static final byte OPCODE_LCMP            = (byte) 0x94;
    public static final byte OPCODE_FCMPL           = (byte) 0x95;
    public static final byte OPCODE_FCMPG           = (byte) 0x96;
    public static final byte OPCODE_DCMPL           = (byte) 0x97;
    public static final byte OPCODE_DCMPG           = (byte) 0x98;
    public static final byte OPCODE_IFEQ            = (byte) 0x99;
    public static final byte OPCODE_IFNE            = (byte) 0x9a;
    public static final byte OPCODE_IFLT            = (byte) 0x9b;
    public static final byte OPCODE_IFGE            = (byte) 0x9c;
    public static final byte OPCODE_IFGT            = (byte) 0x9d;
    public static final byte OPCODE_IFLE            = (byte) 0x9e;
    public static final byte OPCODE_IF_ICMPEQ       = (byte) 0x9f;
    public static final byte OPCODE_IF_ICMPNE       = (byte) 0xa0;
    public static final byte OPCODE_IF_ICMPLT       = (byte) 0xa1;
    public static final byte OPCODE_IF_ICMPGE       = (byte) 0xa2;
    public static final byte OPCODE_IF_ICMPGT       = (byte) 0xa3;
    public static final byte OPCODE_IF_ICMPLE       = (byte) 0xa4;
    public static final byte OPCODE_IF_ACMPEQ       = (byte) 0xa5;
    public static final byte OPCODE_IF_ACMPNE       = (byte) 0xa6;
    public static final byte OPCODE_GOTO            = (byte) 0xa7;
    public static final byte OPCODE_JSR             = (byte) 0xa8;
    public static final byte OPCODE_RET             = (byte) 0xa9;
    public static final byte OPCODE_TABLESWITCH     = (byte) 0xaa;
    public static final byte OPCODE_LOOKUPSWITCH    = (byte) 0xab;
    public static final byte OPCODE_IRETURN         = (byte) 0xac;
    public static final byte OPCODE_LRETURN         = (byte) 0xad;
    public static final byte OPCODE_FRETURN         = (byte) 0xae;
    public static final byte OPCODE_DRETURN         = (byte) 0xaf;
    public static final byte OPCODE_ARETURN         = (byte) 0xb0;
    public static final byte OPCODE_RETURN          = (byte) 0xb1;
    public static final byte OPCODE_GETSTATIC       = (byte) 0xb2;
    public static final byte OPCODE_PUTSTATIC       = (byte) 0xb3;
    public static final byte OPCODE_GETFIELD        = (byte) 0xb4;
    public static final byte OPCODE_PUTFIELD        = (byte) 0xb5;
    public static final byte OPCODE_INVOKEVIRTUAL   = (byte) 0xb6;
    public static final byte OPCODE_INVOKESPECIAL   = (byte) 0xb7;
    public static final byte OPCODE_INVOKESTATIC    = (byte) 0xb8;
    public static final byte OPCODE_INVOKEINTERFACE = (byte) 0xb9;
    public static final byte OPCODE_INVOKEDYNAMIC   = (byte) 0xba;
    public static final byte OPCODE_NEW             = (byte) 0xbb;
    public static final byte OPCODE_NEWARRAY        = (byte) 0xbc;
    public static final byte OPCODE_ANEWARRAY       = (byte) 0xbd;
    public static final byte OPCODE_ARRAYLENGTH     = (byte) 0xbe;
    public static final byte OPCODE_ATHROW          = (byte) 0xbf;
    public static final byte OPCODE_CHECKCAST       = (byte) 0xc0;
    public static final byte OPCODE_INSTANCEOF      = (byte) 0xc1;
    public static final byte OPCODE_MONITORENTER    = (byte) 0xc2;
    public static final byte OPCODE_MONITOREXIT     = (byte) 0xc3;
    public static final byte OPCODE_WIDE            = (byte) 0xc4;
    public static final byte OPCODE_MULTIANEWARRAY  = (byte) 0xc5;
    public static final byte OPCODE_IFNULL          = (byte) 0xc6;
    public static final byte OPCODE_IFNONNULL       = (byte) 0xc7;
    public static final byte OPCODE_GOTO_W          = (byte) 0xc8;
    public static final byte OPCODE_JSR_W           = (byte) 0xc9;
    // might be implemented if needed
    //public static final byte OPCODE_BREAKPOINT      = (byte) 0xca;
    //public static final byte OPCODE_IMPDEP1         = (byte) 0xfe;
    //public static final byte OPCODE_IMPDEP2         = (byte) 0xff;

    public InstructionReader() {
        add(OPCODE_NOP, new NopReader());
        add(OPCODE_ACONST_NULL, new AConst_NullReader());
        add(OPCODE_ICONST_M1, new IConst_m1Reader());
        add(OPCODE_ICONST_0, new IConst_0Reader());
        add(OPCODE_ICONST_1, new IConst_1Reader());
        add(OPCODE_ICONST_2, new IConst_2Reader());
        add(OPCODE_ICONST_3, new IConst_3Reader());
        add(OPCODE_ICONST_4, new IConst_4Reader());
        add(OPCODE_ICONST_5, new IConst_5Reader());
        add(OPCODE_LCONST_0, new LConst_0Reader());
        add(OPCODE_LCONST_1, new LConst_1Reader());
        add(OPCODE_FCONST_0, new FConst_0Reader());
        add(OPCODE_FCONST_1, new FConst_1Reader());
        add(OPCODE_FCONST_2, new FConst_2Reader());
        add(OPCODE_DCONST_0, new DConst_0Reader());
        add(OPCODE_DCONST_1, new DConst_1Reader());
        add(OPCODE_BIPUSH, new BIPushReader());
        add(OPCODE_SIPUSH, new SIPushReader());
        add(OPCODE_LDC, new LdCReader());
        add(OPCODE_LDC_W, new LdC_wReader());
        add(OPCODE_LDC2_W, new LdC2_wReader());
        add(OPCODE_ILOAD, new ILoadReader());
        add(OPCODE_LLOAD, new LLoadReader());
        add(OPCODE_FLOAD, new FLoadReader());
        add(OPCODE_DLOAD, new DLoadReader());
        add(OPCODE_ALOAD, new ALoadReader());
        add(OPCODE_ILOAD_0, new ILoad_0Reader());
        add(OPCODE_ILOAD_1, new ILoad_1Reader());
        add(OPCODE_ILOAD_2, new ILoad_2Reader());
        add(OPCODE_ILOAD_3, new ILoad_3Reader());
        add(OPCODE_LLOAD_0, new LLoad_0Reader());
        add(OPCODE_LLOAD_1, new LLoad_1Reader());
        add(OPCODE_LLOAD_2, new LLoad_2Reader());
        add(OPCODE_LLOAD_3, new LLoad_3Reader());
        add(OPCODE_FLOAD_0, new FLoad_0Reader());
        add(OPCODE_FLOAD_1, new FLoad_1Reader());
        add(OPCODE_FLOAD_2, new FLoad_2Reader());
        add(OPCODE_FLOAD_3, new FLoad_3Reader());
        add(OPCODE_DLOAD_0, new DLoad_0Reader());
        add(OPCODE_DLOAD_1, new DLoad_1Reader());
        add(OPCODE_DLOAD_2, new DLoad_2Reader());
        add(OPCODE_DLOAD_3, new DLoad_3Reader());
        add(OPCODE_ALOAD_0, new ALoad_0Reader());
        add(OPCODE_ALOAD_1, new ALoad_1Reader());
        add(OPCODE_ALOAD_2, new ALoad_2Reader());
        add(OPCODE_ALOAD_3, new ALoad_3Reader());
        add(OPCODE_IALOAD, new IALoadReader());
        add(OPCODE_LALOAD, new LALoadReader());
        add(OPCODE_FALOAD, new FALoadReader());
        add(OPCODE_DALOAD, new DALoadReader());
        add(OPCODE_AALOAD, new AALoadReader());
        add(OPCODE_BALOAD, new BALoadReader());
        add(OPCODE_CALOAD, new CALoadReader());
        add(OPCODE_SALOAD, new SALoadReader());
        add(OPCODE_ISTORE, new IStoreReader());
        add(OPCODE_LSTORE, new LStoreReader());
        add(OPCODE_FSTORE, new FStoreReader());
        add(OPCODE_DSTORE, new DStoreReader());
        add(OPCODE_ASTORE, new AStore_Reader());
        add(OPCODE_ISTORE_0, new IStore_0Reader());
        add(OPCODE_ISTORE_1, new IStore_1Reader());
        add(OPCODE_ISTORE_2, new IStore_2Reader());
        add(OPCODE_ISTORE_3, new IStore_3Reader());
        add(OPCODE_LSTORE_0, new LStore_0Reader());
        add(OPCODE_LSTORE_1, new LStore_1Reader());
        add(OPCODE_LSTORE_2, new LStore_2Reader());
        add(OPCODE_LSTORE_3, new LStore_3Reader());
        add(OPCODE_FSTORE_0, new FStore_0Reader());
        add(OPCODE_FSTORE_1, new FStore_1Reader());
        add(OPCODE_FSTORE_2, new FStore_2Reader());
        add(OPCODE_FSTORE_3, new FStore_3Reader());
        add(OPCODE_DSTORE_0, new DStore_0Reader());
        add(OPCODE_DSTORE_1, new DStore_1Reader());
        add(OPCODE_DSTORE_2, new DStore_2Reader());
        add(OPCODE_DSTORE_3, new DStore_3Reader());
        add(OPCODE_ASTORE_0, new AStore_0Reader());
        add(OPCODE_ASTORE_1, new AStore_1Reader());
        add(OPCODE_ASTORE_2, new AStore_2Reader());
        add(OPCODE_ASTORE_3, new AStore_3Reader());
        add(OPCODE_IASTORE, new IAStoreReader());
        add(OPCODE_LASTORE, new LAStoreReader());
        add(OPCODE_FASTORE, new FAStoreReader());
        add(OPCODE_DASTORE, new DAStoreReader());
        add(OPCODE_AASTORE, new AAStoreReader());
        add(OPCODE_BASTORE, new BAStoreReader());
        add(OPCODE_CASTORE, new CAStoreReader());
        add(OPCODE_SASTORE, new SAStoreReader());
        add(OPCODE_POP, new PopReader());
        add(OPCODE_POP2, new Pop2Reader());
        add(OPCODE_DUP, new DupReader());
        add(OPCODE_DUP_X1, new Dup_x1Reader());
        add(OPCODE_DUP_X2, new Dup_x2Reader());
        add(OPCODE_DUP2, new Dup2Reader());
        add(OPCODE_DUP2_X1, new Dup2_x1Reader());
        add(OPCODE_DUP2_X2, new Dup2_x2Reader());
        add(OPCODE_SWAP, new SwapReader());
        add(OPCODE_IADD, new IAddReader());
        add(OPCODE_LADD, new LAddReader());
        add(OPCODE_FADD, new FAddReader());
        add(OPCODE_DADD, new DAddReader());
        add(OPCODE_ISUB, new ISubReader());
        add(OPCODE_LSUB, new LSubReader());
        add(OPCODE_FSUB, new FSubReader());
        add(OPCODE_DSUB, new DSubReader());
        add(OPCODE_IMUL, new IMulReader());
        add(OPCODE_LMUL, new LMulReader());
        add(OPCODE_FMUL, new FMulReader());
        add(OPCODE_DMUL, new DMulReader());
        add(OPCODE_IDIV, new IDivReader());
        add(OPCODE_LDIV, new LDivReader());
        add(OPCODE_FDIV, new FDivReader());
        add(OPCODE_DDIV, new DDivReader());
        add(OPCODE_IREM, new IRemReader());
        add(OPCODE_LREM, new LRemReader());
        add(OPCODE_FREM, new FRemReader());
        add(OPCODE_DREM, new DRemReader());
        add(OPCODE_INEG, new INegReader());
        add(OPCODE_LNEG, new LNegReader());
        add(OPCODE_FNEG, new FNegReader());
        add(OPCODE_DNEG, new DNegReader());
        add(OPCODE_ISHL, new IShLReader());
        add(OPCODE_LSHL, new LShLReader());
        add(OPCODE_ISHR, new IShRReader());
        add(OPCODE_LSHR, new LShRReader());
        add(OPCODE_IUSHR, new IUShRReader());
        add(OPCODE_LUSHR, new LUShRReader());
        add(OPCODE_IAND, new IAndReader());
        add(OPCODE_LAND, new LAndReader());
        add(OPCODE_IOR, new IOrReader());
        add(OPCODE_LOR, new LOrReader());
        add(OPCODE_IXOR, new IXorReader());
        add(OPCODE_LXOR, new LXorReader());
        add(OPCODE_IINC, new IIncReader());
        add(OPCODE_I2L, new I2LReader());
        add(OPCODE_I2F, new I2FReader());
        add(OPCODE_I2D, new I2DReader());
        add(OPCODE_L2I, new L2IReader());
        add(OPCODE_L2F, new L2FReader());
        add(OPCODE_L2D, new L2DReader());
        add(OPCODE_F2I, new F2IReader());
        add(OPCODE_F2L, new F2LReader());
        add(OPCODE_F2D, new F2DReader());
        add(OPCODE_D2I, new D2IReader());
        add(OPCODE_D2L, new D2LReader());
        add(OPCODE_D2F, new D2FReader());
        add(OPCODE_I2B, new I2BReader());
        add(OPCODE_I2C, new I2CReader());
        add(OPCODE_I2S, new I2SReader());
        add(OPCODE_LCMP, new LCmpReader());
        add(OPCODE_FCMPL, new FCmpLReader());
        add(OPCODE_FCMPG, new FCmpGReader());
        add(OPCODE_DCMPL, new DCmpLReader());
        add(OPCODE_DCMPG, new DCmpGReader());
        add(OPCODE_IFEQ, new IfEqReader());
        add(OPCODE_IFNE, new IfNeReader());
        add(OPCODE_IFLT, new IfLtReader());
        add(OPCODE_IFGE, new IfGeReader());
        add(OPCODE_IFGT, new IfGtReader());
        add(OPCODE_IFLE, new IfLeReader());
        add(OPCODE_IF_ICMPEQ, new If_ICmpEqReader());
        add(OPCODE_IF_ICMPNE, new If_ICmpNeReader());
        add(OPCODE_IF_ICMPLT, new If_ICmpLtReader());
        add(OPCODE_IF_ICMPGE, new If_ICmpGeReader());
        add(OPCODE_IF_ICMPGT, new If_ICmpGtReader());
        add(OPCODE_IF_ICMPLE, new If_ICmpLeReader());
        add(OPCODE_IF_ACMPEQ, new If_ACmpEqReader());
        add(OPCODE_IF_ACMPNE, new If_ACmpNeReader());
        add(OPCODE_GOTO, new GotoReader());
        add(OPCODE_JSR, new JSRReader());
        add(OPCODE_RET, new RetReader());
        add(OPCODE_TABLESWITCH, new TableSwitchReader());
        add(OPCODE_LOOKUPSWITCH, new LookupSwitchReader());
        add(OPCODE_IRETURN, new IReturnReader());
        add(OPCODE_LRETURN, new LReturnReader());
        add(OPCODE_FRETURN, new FReturnReader());
        add(OPCODE_DRETURN, new DReturnReader());
        add(OPCODE_ARETURN, new AReturnReader());
        add(OPCODE_RETURN, new ReturnReader());
        add(OPCODE_GETSTATIC, new GetStaticReader());
        add(OPCODE_PUTSTATIC, new PutStaticReader());
        add(OPCODE_GETFIELD, new GetFieldReader());
        add(OPCODE_PUTFIELD, new PutFieldReader());
        add(OPCODE_INVOKEVIRTUAL, new InvokeVirtualReader());
        add(OPCODE_INVOKESPECIAL, new InvokeSpecialReader());
        add(OPCODE_INVOKESTATIC, new InvokeStaticReader());
        add(OPCODE_INVOKEINTERFACE, new InvokeInterfaceReader());
        add(OPCODE_INVOKEDYNAMIC, new InvokeDynamicReader());
        add(OPCODE_NEW, new NewReader());
        add(OPCODE_NEWARRAY, new NewArrayReader());
        add(OPCODE_ANEWARRAY, new ANewArrayReader());
        add(OPCODE_ARRAYLENGTH, new ArrayLengthReader());
        add(OPCODE_ATHROW, new AThrowReader());
        add(OPCODE_CHECKCAST, new CheckCastReader());
        add(OPCODE_INSTANCEOF, new InstanceOfReader());
        add(OPCODE_MONITORENTER, new MonitorEnterReader());
        add(OPCODE_MONITOREXIT, new MonitorExitReader());
        add(OPCODE_WIDE, new WideReader());
        add(OPCODE_MULTIANEWARRAY, new MultiANewArrayReader());
        add(OPCODE_IFNULL, new IfNullReader());
        add(OPCODE_IFNONNULL, new IfNonNullReader());
        add(OPCODE_GOTO_W, new Goto_wReader());
        add(OPCODE_JSR_W, new JSR_wReader());
        //add(OPCODE_BREAKPOINT, new breakpointReader());
        //add(OPCODE_IMPDEP1, new impdep1Reader());
        //add(OPCODE_IMPDEP2, new impdep2Reader());
    }

    @Override
    public Instruction read(final ByteCodeReader input) throws IOException {
        final byte next = input.readByte();
        final Reader<? extends Instruction> reader = get(next);

        if (reader == null) {
            throw new ClassFormatError("Unrecognized instruction: " + Integer.toHexString(0xFF & next));
        }

        return reader.read(input);
    }
}

package org.obicere.bytecode.core.reader;

import org.javacore.Identifier;
import org.obicere.bytecode.core.reader.annotation.AnnotationElementValueReader;
import org.obicere.bytecode.core.reader.annotation.AnnotationReader;
import org.obicere.bytecode.core.reader.annotation.ArrayElementValueReader;
import org.obicere.bytecode.core.reader.annotation.BooleanElementValueReader;
import org.obicere.bytecode.core.reader.annotation.ByteElementValueReader;
import org.obicere.bytecode.core.reader.annotation.CharacterElementValueReader;
import org.obicere.bytecode.core.reader.annotation.ClassElementValueReader;
import org.obicere.bytecode.core.reader.annotation.DoubleElementValueReader;
import org.obicere.bytecode.core.reader.annotation.ElementValuePairReader;
import org.obicere.bytecode.core.reader.annotation.ElementValueReader;
import org.obicere.bytecode.core.reader.annotation.EnumElementValueReader;
import org.obicere.bytecode.core.reader.annotation.FloatElementValueReader;
import org.obicere.bytecode.core.reader.annotation.IntegerElementValueReader;
import org.obicere.bytecode.core.reader.annotation.LongElementValueReader;
import org.obicere.bytecode.core.reader.annotation.ShortElementValueReader;
import org.obicere.bytecode.core.reader.annotation.StringElementValueReader;
import org.obicere.bytecode.core.reader.annotation.TypeAnnotationReader;
import org.obicere.bytecode.core.reader.annotation.path.PathReader;
import org.obicere.bytecode.core.reader.annotation.target.CatchTargetReader;
import org.obicere.bytecode.core.reader.annotation.target.EmptyTargetReader;
import org.obicere.bytecode.core.reader.annotation.target.LocalVarReader;
import org.obicere.bytecode.core.reader.annotation.target.LocalVarTargetReader;
import org.obicere.bytecode.core.reader.annotation.target.MethodFormalParameterTargetReader;
import org.obicere.bytecode.core.reader.annotation.target.OffsetTargetReader;
import org.obicere.bytecode.core.reader.annotation.target.SuperTypeTargetReader;
import org.obicere.bytecode.core.reader.annotation.target.TargetReader;
import org.obicere.bytecode.core.reader.annotation.target.ThrowsTargetReader;
import org.obicere.bytecode.core.reader.annotation.target.TypeArgumentTargetReader;
import org.obicere.bytecode.core.reader.annotation.target.TypeParameterBoundTargetReader;
import org.obicere.bytecode.core.reader.annotation.target.TypeParameterTargetReader;
import org.obicere.bytecode.core.reader.attribute.AnnotationDefaultAttributeReader;
import org.obicere.bytecode.core.reader.attribute.AttributeReader;
import org.obicere.bytecode.core.reader.attribute.BootstrapMethodsAttributeReader;
import org.obicere.bytecode.core.reader.attribute.CodeAttributeReader;
import org.obicere.bytecode.core.reader.attribute.ConstantValueAttributeReader;
import org.obicere.bytecode.core.reader.attribute.DeprecatedAttributeReader;
import org.obicere.bytecode.core.reader.attribute.EnclosingMethodAttributeReader;
import org.obicere.bytecode.core.reader.attribute.ExceptionsAttributeReader;
import org.obicere.bytecode.core.reader.attribute.InnerClassesAttributeReader;
import org.obicere.bytecode.core.reader.attribute.LineNumberTableAttributeReader;
import org.obicere.bytecode.core.reader.attribute.LocalVariableTableAttributeReader;
import org.obicere.bytecode.core.reader.attribute.LocalVariableTypeTableAttributeReader;
import org.obicere.bytecode.core.reader.attribute.MethodParametersAttributeReader;
import org.obicere.bytecode.core.reader.attribute.RuntimeInvisibleAnnotationsAttributeReader;
import org.obicere.bytecode.core.reader.attribute.RuntimeInvisibleParameterAnnotationsAttributeReader;
import org.obicere.bytecode.core.reader.attribute.RuntimeInvisibleTypeAnnotationsAttributeReader;
import org.obicere.bytecode.core.reader.attribute.RuntimeVisibleAnnotationsAttributeReader;
import org.obicere.bytecode.core.reader.attribute.RuntimeVisibleParameterAnnotationsAttributeReader;
import org.obicere.bytecode.core.reader.attribute.RuntimeVisibleTypeAnnotationsAttributeReader;
import org.obicere.bytecode.core.reader.attribute.SignatureAttributeReader;
import org.obicere.bytecode.core.reader.attribute.SourceDebugExtensionAttributeReader;
import org.obicere.bytecode.core.reader.attribute.SourceFileAttributeReader;
import org.obicere.bytecode.core.reader.attribute.StackMapTableAttributeReader;
import org.obicere.bytecode.core.reader.attribute.SyntheticAttributeReader;
import org.obicere.bytecode.core.reader.code.block.LineNumberReader;
import org.obicere.bytecode.core.reader.code.frame.AppendFrameReader;
import org.obicere.bytecode.core.reader.code.frame.ChopFrameReader;
import org.obicere.bytecode.core.reader.code.frame.FullFrameReader;
import org.obicere.bytecode.core.reader.code.frame.SameFrameExtendedReader;
import org.obicere.bytecode.core.reader.code.frame.SameFrameReader;
import org.obicere.bytecode.core.reader.code.frame.SameLocals1StackItemFrameExtendedReader;
import org.obicere.bytecode.core.reader.code.frame.SameLocals1StackItemFrameReader;
import org.obicere.bytecode.core.reader.code.frame.StackMapFrameReader;
import org.obicere.bytecode.core.reader.code.frame.verification.DoubleVariableInfoReader;
import org.obicere.bytecode.core.reader.code.frame.verification.FloatVariableInfoReader;
import org.obicere.bytecode.core.reader.code.frame.verification.IntegerVariableInfoReader;
import org.obicere.bytecode.core.reader.code.frame.verification.LongVariableInfoReader;
import org.obicere.bytecode.core.reader.code.frame.verification.NullVariableInfoReader;
import org.obicere.bytecode.core.reader.code.frame.verification.ObjectVariableInfoReader;
import org.obicere.bytecode.core.reader.code.frame.verification.TopVariableInfoReader;
import org.obicere.bytecode.core.reader.code.frame.verification.UninitializedThisVariableInfoReader;
import org.obicere.bytecode.core.reader.code.frame.verification.UninitializedVariableInfoReader;
import org.obicere.bytecode.core.reader.code.frame.verification.VerificationTypeInfoReader;
import org.obicere.bytecode.core.reader.code.instruction.AALoadReader;
import org.obicere.bytecode.core.reader.code.instruction.AAStoreReader;
import org.obicere.bytecode.core.reader.code.instruction.AConst_NullReader;
import org.obicere.bytecode.core.reader.code.instruction.ALoadReader;
import org.obicere.bytecode.core.reader.code.instruction.ALoad_0Reader;
import org.obicere.bytecode.core.reader.code.instruction.ALoad_1Reader;
import org.obicere.bytecode.core.reader.code.instruction.ALoad_2Reader;
import org.obicere.bytecode.core.reader.code.instruction.ALoad_3Reader;
import org.obicere.bytecode.core.reader.code.instruction.ANewArrayReader;
import org.obicere.bytecode.core.reader.code.instruction.AReturnReader;
import org.obicere.bytecode.core.reader.code.instruction.AStoreReader;
import org.obicere.bytecode.core.reader.code.instruction.AStore_0Reader;
import org.obicere.bytecode.core.reader.code.instruction.AStore_1Reader;
import org.obicere.bytecode.core.reader.code.instruction.AStore_2Reader;
import org.obicere.bytecode.core.reader.code.instruction.AStore_3Reader;
import org.obicere.bytecode.core.reader.code.instruction.AThrowReader;
import org.obicere.bytecode.core.reader.code.instruction.ArrayLengthReader;
import org.obicere.bytecode.core.reader.code.instruction.BALoadReader;
import org.obicere.bytecode.core.reader.code.instruction.BAStoreReader;
import org.obicere.bytecode.core.reader.code.instruction.BIPushReader;
import org.obicere.bytecode.core.reader.code.instruction.CALoadReader;
import org.obicere.bytecode.core.reader.code.instruction.CAStoreReader;
import org.obicere.bytecode.core.reader.code.instruction.CheckCastReader;
import org.obicere.bytecode.core.reader.code.instruction.D2FReader;
import org.obicere.bytecode.core.reader.code.instruction.D2IReader;
import org.obicere.bytecode.core.reader.code.instruction.D2LReader;
import org.obicere.bytecode.core.reader.code.instruction.DALoadReader;
import org.obicere.bytecode.core.reader.code.instruction.DAStoreReader;
import org.obicere.bytecode.core.reader.code.instruction.DAddReader;
import org.obicere.bytecode.core.reader.code.instruction.DCmpGReader;
import org.obicere.bytecode.core.reader.code.instruction.DCmpLReader;
import org.obicere.bytecode.core.reader.code.instruction.DConst_0Reader;
import org.obicere.bytecode.core.reader.code.instruction.DConst_1Reader;
import org.obicere.bytecode.core.reader.code.instruction.DDivReader;
import org.obicere.bytecode.core.reader.code.instruction.DLoadReader;
import org.obicere.bytecode.core.reader.code.instruction.DLoad_0Reader;
import org.obicere.bytecode.core.reader.code.instruction.DLoad_1Reader;
import org.obicere.bytecode.core.reader.code.instruction.DLoad_2Reader;
import org.obicere.bytecode.core.reader.code.instruction.DLoad_3Reader;
import org.obicere.bytecode.core.reader.code.instruction.DMulReader;
import org.obicere.bytecode.core.reader.code.instruction.DNegReader;
import org.obicere.bytecode.core.reader.code.instruction.DRemReader;
import org.obicere.bytecode.core.reader.code.instruction.DReturnReader;
import org.obicere.bytecode.core.reader.code.instruction.DStoreReader;
import org.obicere.bytecode.core.reader.code.instruction.DStore_0Reader;
import org.obicere.bytecode.core.reader.code.instruction.DStore_1Reader;
import org.obicere.bytecode.core.reader.code.instruction.DStore_2Reader;
import org.obicere.bytecode.core.reader.code.instruction.DStore_3Reader;
import org.obicere.bytecode.core.reader.code.instruction.DSubReader;
import org.obicere.bytecode.core.reader.code.instruction.Dup2Reader;
import org.obicere.bytecode.core.reader.code.instruction.Dup2_x1Reader;
import org.obicere.bytecode.core.reader.code.instruction.Dup2_x2Reader;
import org.obicere.bytecode.core.reader.code.instruction.DupReader;
import org.obicere.bytecode.core.reader.code.instruction.Dup_x1Reader;
import org.obicere.bytecode.core.reader.code.instruction.Dup_x2Reader;
import org.obicere.bytecode.core.reader.code.instruction.F2DReader;
import org.obicere.bytecode.core.reader.code.instruction.F2IReader;
import org.obicere.bytecode.core.reader.code.instruction.F2LReader;
import org.obicere.bytecode.core.reader.code.instruction.FALoadReader;
import org.obicere.bytecode.core.reader.code.instruction.FAStoreReader;
import org.obicere.bytecode.core.reader.code.instruction.FAddReader;
import org.obicere.bytecode.core.reader.code.instruction.FCmpGReader;
import org.obicere.bytecode.core.reader.code.instruction.FCmpLReader;
import org.obicere.bytecode.core.reader.code.instruction.FConst_0Reader;
import org.obicere.bytecode.core.reader.code.instruction.FConst_1Reader;
import org.obicere.bytecode.core.reader.code.instruction.FConst_2Reader;
import org.obicere.bytecode.core.reader.code.instruction.FDivReader;
import org.obicere.bytecode.core.reader.code.instruction.FLoadReader;
import org.obicere.bytecode.core.reader.code.instruction.FLoad_0Reader;
import org.obicere.bytecode.core.reader.code.instruction.FLoad_1Reader;
import org.obicere.bytecode.core.reader.code.instruction.FLoad_2Reader;
import org.obicere.bytecode.core.reader.code.instruction.FLoad_3Reader;
import org.obicere.bytecode.core.reader.code.instruction.FMulReader;
import org.obicere.bytecode.core.reader.code.instruction.FNegReader;
import org.obicere.bytecode.core.reader.code.instruction.FRemReader;
import org.obicere.bytecode.core.reader.code.instruction.FReturnReader;
import org.obicere.bytecode.core.reader.code.instruction.FStoreReader;
import org.obicere.bytecode.core.reader.code.instruction.FStore_0Reader;
import org.obicere.bytecode.core.reader.code.instruction.FStore_1Reader;
import org.obicere.bytecode.core.reader.code.instruction.FStore_2Reader;
import org.obicere.bytecode.core.reader.code.instruction.FStore_3Reader;
import org.obicere.bytecode.core.reader.code.instruction.FSubReader;
import org.obicere.bytecode.core.reader.code.instruction.GetFieldReader;
import org.obicere.bytecode.core.reader.code.instruction.GetStaticReader;
import org.obicere.bytecode.core.reader.code.instruction.GotoReader;
import org.obicere.bytecode.core.reader.code.instruction.Goto_wReader;
import org.obicere.bytecode.core.reader.code.instruction.I2BReader;
import org.obicere.bytecode.core.reader.code.instruction.I2CReader;
import org.obicere.bytecode.core.reader.code.instruction.I2DReader;
import org.obicere.bytecode.core.reader.code.instruction.I2FReader;
import org.obicere.bytecode.core.reader.code.instruction.I2LReader;
import org.obicere.bytecode.core.reader.code.instruction.I2SReader;
import org.obicere.bytecode.core.reader.code.instruction.IALoadReader;
import org.obicere.bytecode.core.reader.code.instruction.IAStoreReader;
import org.obicere.bytecode.core.reader.code.instruction.IAddReader;
import org.obicere.bytecode.core.reader.code.instruction.IAndReader;
import org.obicere.bytecode.core.reader.code.instruction.IConst_0Reader;
import org.obicere.bytecode.core.reader.code.instruction.IConst_1Reader;
import org.obicere.bytecode.core.reader.code.instruction.IConst_2Reader;
import org.obicere.bytecode.core.reader.code.instruction.IConst_3Reader;
import org.obicere.bytecode.core.reader.code.instruction.IConst_4Reader;
import org.obicere.bytecode.core.reader.code.instruction.IConst_5Reader;
import org.obicere.bytecode.core.reader.code.instruction.IConst_m1Reader;
import org.obicere.bytecode.core.reader.code.instruction.IDivReader;
import org.obicere.bytecode.core.reader.code.instruction.IIncReader;
import org.obicere.bytecode.core.reader.code.instruction.ILoadReader;
import org.obicere.bytecode.core.reader.code.instruction.ILoad_0Reader;
import org.obicere.bytecode.core.reader.code.instruction.ILoad_1Reader;
import org.obicere.bytecode.core.reader.code.instruction.ILoad_2Reader;
import org.obicere.bytecode.core.reader.code.instruction.ILoad_3Reader;
import org.obicere.bytecode.core.reader.code.instruction.IMulReader;
import org.obicere.bytecode.core.reader.code.instruction.INegReader;
import org.obicere.bytecode.core.reader.code.instruction.IOrReader;
import org.obicere.bytecode.core.reader.code.instruction.IRemReader;
import org.obicere.bytecode.core.reader.code.instruction.IReturnReader;
import org.obicere.bytecode.core.reader.code.instruction.IShLReader;
import org.obicere.bytecode.core.reader.code.instruction.IShRReader;
import org.obicere.bytecode.core.reader.code.instruction.IStoreReader;
import org.obicere.bytecode.core.reader.code.instruction.IStore_0Reader;
import org.obicere.bytecode.core.reader.code.instruction.IStore_1Reader;
import org.obicere.bytecode.core.reader.code.instruction.IStore_2Reader;
import org.obicere.bytecode.core.reader.code.instruction.IStore_3Reader;
import org.obicere.bytecode.core.reader.code.instruction.ISubReader;
import org.obicere.bytecode.core.reader.code.instruction.IUShRReader;
import org.obicere.bytecode.core.reader.code.instruction.IXorReader;
import org.obicere.bytecode.core.reader.code.instruction.IfEqReader;
import org.obicere.bytecode.core.reader.code.instruction.IfGeReader;
import org.obicere.bytecode.core.reader.code.instruction.IfGtReader;
import org.obicere.bytecode.core.reader.code.instruction.IfLeReader;
import org.obicere.bytecode.core.reader.code.instruction.IfLtReader;
import org.obicere.bytecode.core.reader.code.instruction.IfNeReader;
import org.obicere.bytecode.core.reader.code.instruction.IfNonNullReader;
import org.obicere.bytecode.core.reader.code.instruction.IfNullReader;
import org.obicere.bytecode.core.reader.code.instruction.If_ACmpEqReader;
import org.obicere.bytecode.core.reader.code.instruction.If_ACmpNeReader;
import org.obicere.bytecode.core.reader.code.instruction.If_ICmpEqReader;
import org.obicere.bytecode.core.reader.code.instruction.If_ICmpGeReader;
import org.obicere.bytecode.core.reader.code.instruction.If_ICmpGtReader;
import org.obicere.bytecode.core.reader.code.instruction.If_ICmpLeReader;
import org.obicere.bytecode.core.reader.code.instruction.If_ICmpLtReader;
import org.obicere.bytecode.core.reader.code.instruction.If_ICmpNeReader;
import org.obicere.bytecode.core.reader.code.instruction.InstanceOfReader;
import org.obicere.bytecode.core.reader.code.instruction.InstructionReader;
import org.obicere.bytecode.core.reader.code.instruction.InvokeDynamicReader;
import org.obicere.bytecode.core.reader.code.instruction.InvokeInterfaceReader;
import org.obicere.bytecode.core.reader.code.instruction.InvokeSpecialReader;
import org.obicere.bytecode.core.reader.code.instruction.InvokeStaticReader;
import org.obicere.bytecode.core.reader.code.instruction.InvokeVirtualReader;
import org.obicere.bytecode.core.reader.code.instruction.JSRReader;
import org.obicere.bytecode.core.reader.code.instruction.JSR_wReader;
import org.obicere.bytecode.core.reader.code.instruction.L2DReader;
import org.obicere.bytecode.core.reader.code.instruction.L2FReader;
import org.obicere.bytecode.core.reader.code.instruction.L2IReader;
import org.obicere.bytecode.core.reader.code.instruction.LALoadReader;
import org.obicere.bytecode.core.reader.code.instruction.LAStoreReader;
import org.obicere.bytecode.core.reader.code.instruction.LAddReader;
import org.obicere.bytecode.core.reader.code.instruction.LAndReader;
import org.obicere.bytecode.core.reader.code.instruction.LCmpReader;
import org.obicere.bytecode.core.reader.code.instruction.LConst_0Reader;
import org.obicere.bytecode.core.reader.code.instruction.LConst_1Reader;
import org.obicere.bytecode.core.reader.code.instruction.LDivReader;
import org.obicere.bytecode.core.reader.code.instruction.LLoadReader;
import org.obicere.bytecode.core.reader.code.instruction.LLoad_0Reader;
import org.obicere.bytecode.core.reader.code.instruction.LLoad_1Reader;
import org.obicere.bytecode.core.reader.code.instruction.LLoad_2Reader;
import org.obicere.bytecode.core.reader.code.instruction.LLoad_3Reader;
import org.obicere.bytecode.core.reader.code.instruction.LMulReader;
import org.obicere.bytecode.core.reader.code.instruction.LNegReader;
import org.obicere.bytecode.core.reader.code.instruction.LOrReader;
import org.obicere.bytecode.core.reader.code.instruction.LRemReader;
import org.obicere.bytecode.core.reader.code.instruction.LReturnReader;
import org.obicere.bytecode.core.reader.code.instruction.LShLReader;
import org.obicere.bytecode.core.reader.code.instruction.LShRReader;
import org.obicere.bytecode.core.reader.code.instruction.LStoreReader;
import org.obicere.bytecode.core.reader.code.instruction.LStore_0Reader;
import org.obicere.bytecode.core.reader.code.instruction.LStore_1Reader;
import org.obicere.bytecode.core.reader.code.instruction.LStore_2Reader;
import org.obicere.bytecode.core.reader.code.instruction.LStore_3Reader;
import org.obicere.bytecode.core.reader.code.instruction.LSubReader;
import org.obicere.bytecode.core.reader.code.instruction.LUShRReader;
import org.obicere.bytecode.core.reader.code.instruction.LXorReader;
import org.obicere.bytecode.core.reader.code.instruction.LdC2_wReader;
import org.obicere.bytecode.core.reader.code.instruction.LdCReader;
import org.obicere.bytecode.core.reader.code.instruction.LdC_wReader;
import org.obicere.bytecode.core.reader.code.instruction.LookupSwitchReader;
import org.obicere.bytecode.core.reader.code.instruction.MonitorEnterReader;
import org.obicere.bytecode.core.reader.code.instruction.MonitorExitReader;
import org.obicere.bytecode.core.reader.code.instruction.MultiANewArrayReader;
import org.obicere.bytecode.core.reader.code.instruction.NewArrayReader;
import org.obicere.bytecode.core.reader.code.instruction.NewReader;
import org.obicere.bytecode.core.reader.code.instruction.NopReader;
import org.obicere.bytecode.core.reader.code.instruction.Pop2Reader;
import org.obicere.bytecode.core.reader.code.instruction.PopReader;
import org.obicere.bytecode.core.reader.code.instruction.PutFieldReader;
import org.obicere.bytecode.core.reader.code.instruction.PutStaticReader;
import org.obicere.bytecode.core.reader.code.instruction.RetReader;
import org.obicere.bytecode.core.reader.code.instruction.ReturnReader;
import org.obicere.bytecode.core.reader.code.instruction.SALoadReader;
import org.obicere.bytecode.core.reader.code.instruction.SAStoreReader;
import org.obicere.bytecode.core.reader.code.instruction.SIPushReader;
import org.obicere.bytecode.core.reader.code.instruction.SwapReader;
import org.obicere.bytecode.core.reader.code.instruction.TableSwitchReader;
import org.obicere.bytecode.core.reader.code.instruction.WideReader;
import org.obicere.bytecode.core.reader.code.table.LocalVariableReader;
import org.obicere.bytecode.core.reader.common.BootstrapMethodReader;
import org.obicere.bytecode.core.reader.common.InnerClassReader;
import org.obicere.bytecode.core.reader.common.ParameterReader;
import org.obicere.bytecode.core.reader.constant.ConstantClassReader;
import org.obicere.bytecode.core.reader.constant.ConstantDoubleReader;
import org.obicere.bytecode.core.reader.constant.ConstantFieldRefReader;
import org.obicere.bytecode.core.reader.constant.ConstantFloatReader;
import org.obicere.bytecode.core.reader.constant.ConstantIntegerReader;
import org.obicere.bytecode.core.reader.constant.ConstantInterfaceMethodRefReader;
import org.obicere.bytecode.core.reader.constant.ConstantInvokeDynamicReader;
import org.obicere.bytecode.core.reader.constant.ConstantLongReader;
import org.obicere.bytecode.core.reader.constant.ConstantMethodHandleReader;
import org.obicere.bytecode.core.reader.constant.ConstantMethodRefReader;
import org.obicere.bytecode.core.reader.constant.ConstantMethodTypeReader;
import org.obicere.bytecode.core.reader.constant.ConstantNameAndTypeReader;
import org.obicere.bytecode.core.reader.constant.ConstantPoolReader;
import org.obicere.bytecode.core.reader.constant.ConstantReader;
import org.obicere.bytecode.core.reader.constant.ConstantStringReader;
import org.obicere.bytecode.core.reader.constant.ConstantUtf8Reader;

import java.util.Map;

/**
 */
public class DefaultReaders extends AbstractReaders {

    public DefaultReaders() {
        provideDefaults();
    }

    public DefaultReaders(final Map<Identifier, Reader<?>> readers) {
        super(readers);
        provideDefaults();
    }

    public DefaultReaders(final Readers readers) {
        super(readers);
        provideDefaults();
    }

    protected void provideDefaults() {
        setReader(Identifier.CLASS, new JCClassReader());
        setReader(Identifier.FIELD, new JCFieldReader());
        setReader(Identifier.METHOD, new JCMethodReader());
        setReader(Identifier.ANNOTATION, new AnnotationReader());
        setReader(Identifier.TYPE_ANNOTATION, new TypeAnnotationReader());
        setReader(Identifier.ELEMENT_VALUE_PAIR, new ElementValuePairReader());
        setReader(Identifier.ELEMENT_VALUE, new ElementValueReader());
        setReader(Identifier.ANNOTATION_ELEMENT_VALUE, new AnnotationElementValueReader());
        setReader(Identifier.ARRAY_ELEMENT_VALUE, new ArrayElementValueReader());
        setReader(Identifier.BOOLEAN_ELEMENT_VALUE, new BooleanElementValueReader());
        setReader(Identifier.BYTE_ELEMENT_VALUE, new ByteElementValueReader());
        setReader(Identifier.CHARACTER_ELEMENT_VALUE, new CharacterElementValueReader());
        setReader(Identifier.CLASS_ELEMENT_VALUE, new ClassElementValueReader());
        setReader(Identifier.DOUBLE_ELEMENT_VALUE, new DoubleElementValueReader());
        setReader(Identifier.ENUM_ELEMENT_VALUE, new EnumElementValueReader());
        setReader(Identifier.FLOAT_ELEMENT_VALUE, new FloatElementValueReader());
        setReader(Identifier.INTEGER_ELEMENT_VALUE, new IntegerElementValueReader());
        setReader(Identifier.LONG_ELEMENT_VALUE, new LongElementValueReader());
        setReader(Identifier.SHORT_ELEMENT_VALUE, new ShortElementValueReader());
        setReader(Identifier.STRING_ELEMENT_VALUE, new StringElementValueReader());
        setReader(Identifier.PATH, new PathReader());
        setReader(Identifier.TARGET, new TargetReader());
        setReader(Identifier.CATCH_TARGET, new CatchTargetReader());
        setReader(Identifier.EMPTY_TARGET, new EmptyTargetReader());
        setReader(Identifier.LOCAL_VAR_TARGET, new LocalVarTargetReader());
        setReader(Identifier.LOCAL_VAR, new LocalVarReader());
        setReader(Identifier.METHOD_FORMAL_PARAMETER_TARGET, new MethodFormalParameterTargetReader());
        setReader(Identifier.OFFSET_TARGET, new OffsetTargetReader());
        setReader(Identifier.SUPER_TYPE_TARGET, new SuperTypeTargetReader());
        setReader(Identifier.THROWS_TARGET, new ThrowsTargetReader());
        setReader(Identifier.TYPE_ARGUMENT_TARGET, new TypeArgumentTargetReader());
        setReader(Identifier.TYPE_PARAMETER_BOUND_TARGET, new TypeParameterBoundTargetReader());
        setReader(Identifier.TYPE_PARAMETER_TARGET, new TypeParameterTargetReader());
        setReader(Identifier.ATTRIBUTE, new AttributeReader());
        setReader(Identifier.ANNOTATION_DEFAULT_ATTRIBUTE, new AnnotationDefaultAttributeReader());
        setReader(Identifier.BOOTSTRAP_METHODS_ATTRIBUTE, new BootstrapMethodsAttributeReader());
        setReader(Identifier.CODE_ATTRIBUTE, new CodeAttributeReader());
        setReader(Identifier.CONSTANT_VALUE_ATTRIBUTE, new ConstantValueAttributeReader());
        setReader(Identifier.DEPRECATED_ATTRIBUTE, new DeprecatedAttributeReader());
        setReader(Identifier.ENCLOSING_METHOD_ATTRIBUTE, new EnclosingMethodAttributeReader());
        setReader(Identifier.EXCEPTIONS_ATTRIBUTE, new ExceptionsAttributeReader());
        setReader(Identifier.INNER_CLASSES_ATTRIBUTE, new InnerClassesAttributeReader());
        setReader(Identifier.LINE_NUMBER_TABLE_ATTRIBUTE, new LineNumberTableAttributeReader());
        setReader(Identifier.LOCAL_VARIABLE_TABLE_ATTRIBUTE, new LocalVariableTableAttributeReader());
        setReader(Identifier.LOCAL_VARIABLE_TYPE_TABLE_ATTRIBUTE, new LocalVariableTypeTableAttributeReader());
        setReader(Identifier.METHOD_PARAMETERS_ATTRIBUTE, new MethodParametersAttributeReader());
        setReader(Identifier.RUNTIME_INVISIBLE_ANNOTATIONS_ATTRIBUTE, new RuntimeInvisibleAnnotationsAttributeReader());
        setReader(Identifier.RUNTIME_INVISIBLE_PARAMETER_ANNOTATIONS_ATTRIBUTE, new RuntimeInvisibleParameterAnnotationsAttributeReader());
        setReader(Identifier.RUNTIME_INVISIBLE_TYPE_ANNOTATIONS_ATTRIBUTE, new RuntimeInvisibleTypeAnnotationsAttributeReader());
        setReader(Identifier.RUNTIME_VISIBLE_ANNOTATIONS_ATTRIBUTE, new RuntimeVisibleAnnotationsAttributeReader());
        setReader(Identifier.RUNTIME_VISIBLE_PARAMETER_ANNOTATIONS_ATTRIBUTE, new RuntimeVisibleParameterAnnotationsAttributeReader());
        setReader(Identifier.RUNTIME_VISIBLE_TYPE_ANNOTATIONS_ATTRIBUTE, new RuntimeVisibleTypeAnnotationsAttributeReader());
        setReader(Identifier.SIGNATURE_ATTRIBUTE, new SignatureAttributeReader());
        setReader(Identifier.SOURCE_DEBUG_EXTENSION_ATTRIBUTE, new SourceDebugExtensionAttributeReader());
        setReader(Identifier.SOURCE_FILE_ATTRIBUTE, new SourceFileAttributeReader());
        setReader(Identifier.STACK_MAP_TABLE_ATTRIBUTE, new StackMapTableAttributeReader());
        setReader(Identifier.SYNTHETIC_ATTRIBUTE, new SyntheticAttributeReader());
        setReader(Identifier.LINE_NUMBER, new LineNumberReader());
        setReader(Identifier.STACK_MAP_FRAME, new StackMapFrameReader());
        setReader(Identifier.APPEND_FRAME, new AppendFrameReader());
        setReader(Identifier.CHOP_FRAME, new ChopFrameReader());
        setReader(Identifier.FULL_FRAME, new FullFrameReader());
        setReader(Identifier.SAME_FRAME, new SameFrameReader());
        setReader(Identifier.SAME_FRAME_EXTENDED, new SameFrameExtendedReader());
        setReader(Identifier.SAME_LOCALS_1_STACK_ITEM_FRAME, new SameLocals1StackItemFrameReader());
        setReader(Identifier.SAME_LOCALS_1_STACK_ITEM_FRAME_EXTENDED, new SameLocals1StackItemFrameExtendedReader());
        setReader(Identifier.VERIFICATION_TYPE_INFO, new VerificationTypeInfoReader());
        setReader(Identifier.DOUBLE_VARIABLE_INFO, new DoubleVariableInfoReader());
        setReader(Identifier.FLOAT_VARIABLE_INFO, new FloatVariableInfoReader());
        setReader(Identifier.INTEGER_VARIABLE_INFO, new IntegerVariableInfoReader());
        setReader(Identifier.LONG_VARIABLE_INFO, new LongVariableInfoReader());
        setReader(Identifier.NULL_VARIABLE_INFO, new NullVariableInfoReader());
        setReader(Identifier.OBJECT_VARIABLE_INFO, new ObjectVariableInfoReader());
        setReader(Identifier.TOP_VARIABLE_INFO, new TopVariableInfoReader());
        setReader(Identifier.UNINITIALIZED_THIS_VARIABLE_INFO, new UninitializedThisVariableInfoReader());
        setReader(Identifier.UNINITIALIZED_VARIABLE_INFO, new UninitializedVariableInfoReader());
        setReader(Identifier.INSTRUCTION, new InstructionReader());
        setReader(Identifier.AALOAD, new AALoadReader());
        setReader(Identifier.AASTORE, new AAStoreReader());
        setReader(Identifier.ACONST_NULL, new AConst_NullReader());
        setReader(Identifier.ALOAD, new ALoadReader());
        setReader(Identifier.ALOAD_0, new ALoad_0Reader());
        setReader(Identifier.ALOAD_1, new ALoad_1Reader());
        setReader(Identifier.ALOAD_2, new ALoad_2Reader());
        setReader(Identifier.ALOAD_3, new ALoad_3Reader());
        setReader(Identifier.ANEWARRAY, new ANewArrayReader());
        setReader(Identifier.ARETURN, new AReturnReader());
        setReader(Identifier.ARRAYLENGTH, new ArrayLengthReader());
        setReader(Identifier.ASTORE, new AStoreReader());
        setReader(Identifier.ASTORE_0, new AStore_0Reader());
        setReader(Identifier.ASTORE_1, new AStore_1Reader());
        setReader(Identifier.ASTORE_2, new AStore_2Reader());
        setReader(Identifier.ASTORE_3, new AStore_3Reader());
        setReader(Identifier.ATHROW, new AThrowReader());
        setReader(Identifier.BALOAD, new BALoadReader());
        setReader(Identifier.BASTORE, new BAStoreReader());
        setReader(Identifier.BIPUSH, new BIPushReader());
        setReader(Identifier.CALOAD, new CALoadReader());
        setReader(Identifier.CASTORE, new CAStoreReader());
        setReader(Identifier.CHECKCAST, new CheckCastReader());
        setReader(Identifier.D2F, new D2FReader());
        setReader(Identifier.D2I, new D2IReader());
        setReader(Identifier.D2L, new D2LReader());
        setReader(Identifier.DADD, new DAddReader());
        setReader(Identifier.DALOAD, new DALoadReader());
        setReader(Identifier.DASTORE, new DAStoreReader());
        setReader(Identifier.DCMPG, new DCmpGReader());
        setReader(Identifier.DCMPL, new DCmpLReader());
        setReader(Identifier.DCONST_0, new DConst_0Reader());
        setReader(Identifier.DCONST_1, new DConst_1Reader());
        setReader(Identifier.DDIV, new DDivReader());
        setReader(Identifier.DLOAD, new DLoadReader());
        setReader(Identifier.DLOAD_0, new DLoad_0Reader());
        setReader(Identifier.DLOAD_1, new DLoad_1Reader());
        setReader(Identifier.DLOAD_2, new DLoad_2Reader());
        setReader(Identifier.DLOAD_3, new DLoad_3Reader());
        setReader(Identifier.DMUL, new DMulReader());
        setReader(Identifier.DNEG, new DNegReader());
        setReader(Identifier.DREM, new DRemReader());
        setReader(Identifier.DRETURN, new DReturnReader());
        setReader(Identifier.DSTORE, new DStoreReader());
        setReader(Identifier.DSTORE_0, new DStore_0Reader());
        setReader(Identifier.DSTORE_1, new DStore_1Reader());
        setReader(Identifier.DSTORE_2, new DStore_2Reader());
        setReader(Identifier.DSTORE_3, new DStore_3Reader());
        setReader(Identifier.DSUB, new DSubReader());
        setReader(Identifier.DUP, new DupReader());
        setReader(Identifier.DUP2, new Dup2Reader());
        setReader(Identifier.DUP2_X1, new Dup2_x1Reader());
        setReader(Identifier.DUP2_X2, new Dup2_x2Reader());
        setReader(Identifier.DUP_X1, new Dup_x1Reader());
        setReader(Identifier.DUP_X2, new Dup_x2Reader());
        setReader(Identifier.F2D, new F2DReader());
        setReader(Identifier.F2I, new F2IReader());
        setReader(Identifier.F2L, new F2LReader());
        setReader(Identifier.FADD, new FAddReader());
        setReader(Identifier.FALOAD, new FALoadReader());
        setReader(Identifier.FASTORE, new FAStoreReader());
        setReader(Identifier.FCMPG, new FCmpGReader());
        setReader(Identifier.FCMPL, new FCmpLReader());
        setReader(Identifier.FCONST_0, new FConst_0Reader());
        setReader(Identifier.FCONST_1, new FConst_1Reader());
        setReader(Identifier.FCONST_2, new FConst_2Reader());
        setReader(Identifier.FDIV, new FDivReader());
        setReader(Identifier.FLOAD, new FLoadReader());
        setReader(Identifier.FLOAD_0, new FLoad_0Reader());
        setReader(Identifier.FLOAD_1, new FLoad_1Reader());
        setReader(Identifier.FLOAD_2, new FLoad_2Reader());
        setReader(Identifier.FLOAD_3, new FLoad_3Reader());
        setReader(Identifier.FMUL, new FMulReader());
        setReader(Identifier.FNEG, new FNegReader());
        setReader(Identifier.FREM, new FRemReader());
        setReader(Identifier.FRETURN, new FReturnReader());
        setReader(Identifier.FSTORE, new FStoreReader());
        setReader(Identifier.FSTORE_0, new FStore_0Reader());
        setReader(Identifier.FSTORE_1, new FStore_1Reader());
        setReader(Identifier.FSTORE_2, new FStore_2Reader());
        setReader(Identifier.FSTORE_3, new FStore_3Reader());
        setReader(Identifier.FSUB, new FSubReader());
        setReader(Identifier.GETFIELD, new GetFieldReader());
        setReader(Identifier.GETSTATIC, new GetStaticReader());
        setReader(Identifier.GOTO, new GotoReader());
        setReader(Identifier.GOTO_W, new Goto_wReader());
        setReader(Identifier.I2B, new I2BReader());
        setReader(Identifier.I2C, new I2CReader());
        setReader(Identifier.I2D, new I2DReader());
        setReader(Identifier.I2F, new I2FReader());
        setReader(Identifier.I2L, new I2LReader());
        setReader(Identifier.I2S, new I2SReader());
        setReader(Identifier.IADD, new IAddReader());
        setReader(Identifier.IALOAD, new IALoadReader());
        setReader(Identifier.IAND, new IAndReader());
        setReader(Identifier.IASTORE, new IAStoreReader());
        setReader(Identifier.ICONST_0, new IConst_0Reader());
        setReader(Identifier.ICONST_1, new IConst_1Reader());
        setReader(Identifier.ICONST_2, new IConst_2Reader());
        setReader(Identifier.ICONST_3, new IConst_3Reader());
        setReader(Identifier.ICONST_4, new IConst_4Reader());
        setReader(Identifier.ICONST_5, new IConst_5Reader());
        setReader(Identifier.ICONST_M1, new IConst_m1Reader());
        setReader(Identifier.IDIV, new IDivReader());
        setReader(Identifier.IF_ACMPEQ, new If_ACmpEqReader());
        setReader(Identifier.IF_ACMPNE, new If_ACmpNeReader());
        setReader(Identifier.IF_ICMPEQ, new If_ICmpEqReader());
        setReader(Identifier.IF_ICMPGE, new If_ICmpGeReader());
        setReader(Identifier.IF_ICMPGT, new If_ICmpGtReader());
        setReader(Identifier.IF_ICMPLE, new If_ICmpLeReader());
        setReader(Identifier.IF_ICMPLT, new If_ICmpLtReader());
        setReader(Identifier.IF_ICMPNE, new If_ICmpNeReader());
        setReader(Identifier.IFEQ, new IfEqReader());
        setReader(Identifier.IFGE, new IfGeReader());
        setReader(Identifier.IFGT, new IfGtReader());
        setReader(Identifier.IFLE, new IfLeReader());
        setReader(Identifier.IFLT, new IfLtReader());
        setReader(Identifier.IFNE, new IfNeReader());
        setReader(Identifier.IFNONNULL, new IfNonNullReader());
        setReader(Identifier.IFNULL, new IfNullReader());
        setReader(Identifier.IINC, new IIncReader());
        setReader(Identifier.ILOAD, new ILoadReader());
        setReader(Identifier.ILOAD_0, new ILoad_0Reader());
        setReader(Identifier.ILOAD_1, new ILoad_1Reader());
        setReader(Identifier.ILOAD_2, new ILoad_2Reader());
        setReader(Identifier.ILOAD_3, new ILoad_3Reader());
        setReader(Identifier.IMUL, new IMulReader());
        setReader(Identifier.INEG, new INegReader());
        setReader(Identifier.INSTANCEOF, new InstanceOfReader());
        setReader(Identifier.INVOKEDYNAMIC, new InvokeDynamicReader());
        setReader(Identifier.INVOKEINTERFACE, new InvokeInterfaceReader());
        setReader(Identifier.INVOKESPECIAL, new InvokeSpecialReader());
        setReader(Identifier.INVOKESTATIC, new InvokeStaticReader());
        setReader(Identifier.INVOKEVIRTUAL, new InvokeVirtualReader());
        setReader(Identifier.IOR, new IOrReader());
        setReader(Identifier.IREM, new IRemReader());
        setReader(Identifier.IRETURN, new IReturnReader());
        setReader(Identifier.ISHL, new IShLReader());
        setReader(Identifier.ISHR, new IShRReader());
        setReader(Identifier.ISTORE, new IStoreReader());
        setReader(Identifier.ISTORE_0, new IStore_0Reader());
        setReader(Identifier.ISTORE_1, new IStore_1Reader());
        setReader(Identifier.ISTORE_2, new IStore_2Reader());
        setReader(Identifier.ISTORE_3, new IStore_3Reader());
        setReader(Identifier.ISUB, new ISubReader());
        setReader(Identifier.IUSHR, new IUShRReader());
        setReader(Identifier.IXOR, new IXorReader());
        setReader(Identifier.JSR, new JSRReader());
        setReader(Identifier.JSR_W, new JSR_wReader());
        setReader(Identifier.L2D, new L2DReader());
        setReader(Identifier.L2F, new L2FReader());
        setReader(Identifier.L2I, new L2IReader());
        setReader(Identifier.LADD, new LAddReader());
        setReader(Identifier.LALOAD, new LALoadReader());
        setReader(Identifier.LAND, new LAndReader());
        setReader(Identifier.LASTORE, new LAStoreReader());
        setReader(Identifier.LCMP, new LCmpReader());
        setReader(Identifier.LCONST_0, new LConst_0Reader());
        setReader(Identifier.LCONST_1, new LConst_1Reader());
        setReader(Identifier.LDC, new LdCReader());
        setReader(Identifier.LDC2_W, new LdC2_wReader());
        setReader(Identifier.LDC_W, new LdC_wReader());
        setReader(Identifier.LDIV, new LDivReader());
        setReader(Identifier.LLOAD, new LLoadReader());
        setReader(Identifier.LLOAD_0, new LLoad_0Reader());
        setReader(Identifier.LLOAD_1, new LLoad_1Reader());
        setReader(Identifier.LLOAD_2, new LLoad_2Reader());
        setReader(Identifier.LLOAD_3, new LLoad_3Reader());
        setReader(Identifier.LMUL, new LMulReader());
        setReader(Identifier.LNEG, new LNegReader());
        setReader(Identifier.LOOKUPSWITCH, new LookupSwitchReader());
        setReader(Identifier.LOR, new LOrReader());
        setReader(Identifier.LREM, new LRemReader());
        setReader(Identifier.LRETURN, new LReturnReader());
        setReader(Identifier.LSHL, new LShLReader());
        setReader(Identifier.LSHR, new LShRReader());
        setReader(Identifier.LSTORE, new LStoreReader());
        setReader(Identifier.LSTORE_0, new LStore_0Reader());
        setReader(Identifier.LSTORE_1, new LStore_1Reader());
        setReader(Identifier.LSTORE_2, new LStore_2Reader());
        setReader(Identifier.LSTORE_3, new LStore_3Reader());
        setReader(Identifier.LSUB, new LSubReader());
        setReader(Identifier.LUSHR, new LUShRReader());
        setReader(Identifier.LXOR, new LXorReader());
        setReader(Identifier.MONITORENTER, new MonitorEnterReader());
        setReader(Identifier.MONITOREXIT, new MonitorExitReader());
        setReader(Identifier.MULTIANEWARRAY, new MultiANewArrayReader());
        setReader(Identifier.NEW, new NewReader());
        setReader(Identifier.NEWARRAY, new NewArrayReader());
        setReader(Identifier.NOP, new NopReader());
        setReader(Identifier.POP, new PopReader());
        setReader(Identifier.POP2, new Pop2Reader());
        setReader(Identifier.PUTFIELD, new PutFieldReader());
        setReader(Identifier.PUTSTATIC, new PutStaticReader());
        setReader(Identifier.RET, new RetReader());
        setReader(Identifier.RETURN, new ReturnReader());
        setReader(Identifier.SALOAD, new SALoadReader());
        setReader(Identifier.SASTORE, new SAStoreReader());
        setReader(Identifier.SIPUSH, new SIPushReader());
        setReader(Identifier.SWAP, new SwapReader());
        setReader(Identifier.TABLESWITCH, new TableSwitchReader());
        setReader(Identifier.WIDE, new WideReader());
        setReader(Identifier.LOCAL_VARIABLE, new LocalVariableReader());
        setReader(Identifier.BOOTSTRAP_METHOD, new BootstrapMethodReader());
        setReader(Identifier.INNER_CLASS, new InnerClassReader());
        setReader(Identifier.PARAMETER, new ParameterReader());
        setReader(Identifier.CONSTANT_POOL, new ConstantPoolReader());
        setReader(Identifier.CONSTANT, new ConstantReader());
        setReader(Identifier.CONSTANT_CLASS, new ConstantClassReader());
        setReader(Identifier.CONSTANT_DOUBLE, new ConstantDoubleReader());
        setReader(Identifier.CONSTANT_FIELD_REF, new ConstantFieldRefReader());
        setReader(Identifier.CONSTANT_FLOAT, new ConstantFloatReader());
        setReader(Identifier.CONSTANT_INTEGER, new ConstantIntegerReader());
        setReader(Identifier.CONSTANT_INTERFACE_METHOD_REF, new ConstantInterfaceMethodRefReader());
        setReader(Identifier.CONSTANT_INVOKE_DYNAMIC, new ConstantInvokeDynamicReader());
        setReader(Identifier.CONSTANT_LONG, new ConstantLongReader());
        setReader(Identifier.CONSTANT_METHOD_HANDLE, new ConstantMethodHandleReader());
        setReader(Identifier.CONSTANT_METHOD_REF, new ConstantMethodRefReader());
        setReader(Identifier.CONSTANT_METHOD_TYPE, new ConstantMethodTypeReader());
        setReader(Identifier.CONSTANT_NAME_AND_TYPE, new ConstantNameAndTypeReader());
        setReader(Identifier.CONSTANT_STRING, new ConstantStringReader());
        setReader(Identifier.CONSTANT_UTF8, new ConstantUtf8Reader());
    }
}
